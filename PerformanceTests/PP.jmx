<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.0 r1840935">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="dev" elementType="Argument">
            <stringProp name="Argument.name">dev</stringProp>
            <stringProp name="Argument.value">dev-coursedirectory.nationalcareersservice.org.uk</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sit" elementType="Argument">
            <stringProp name="Argument.name">sit</stringProp>
            <stringProp name="Argument.value">sit-coursedirectory.nationalcareersservice.org.uk</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pp" elementType="Argument">
            <stringProp name="Argument.name">pp</stringProp>
            <stringProp name="Argument.value">pp-coursedirectory.nationalcareersservice.org.uk</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${sit}</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
      </CookieManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <longProp name="ThreadGroup.start_time">1370726934000</longProp>
        <longProp name="ThreadGroup.end_time">1370726934000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1 /" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1 /" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4 /Auth/Login" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/Auth/Login</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5 /auth" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">CourseDirectory</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">https%3A%2F%2Fsit-coursedirectory.nationalcareersservice.org.uk%2Fauth%2Fcb</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">code</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">openid%20email%20profile%20offline_access</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">form_post</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">636932702037344703.YWI0ODhhM2MtYTg4My00MjBjLWEwNjItMmJkMDQyZjUzZTFmOTI3YmM4NzctOWYwMS00ZWE5LTk4MTgtMjNlYmY3ZTMxNDgw</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="prompt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">prompt</stringProp>
                    <stringProp name="Argument.value">consent</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">CfDJ8AVJBmry2h1MqXWCYUcfL5ZE94jyjBzHsr59_Ou5l2o677Xj9CvrYifIchnHuU1_k2MXQCra0zlb8re0sONdj8xKUcLu_g9zdInHQmDYd7XD8INd3sm_6OZOfEOQjQt607MdJgsYklmkKUCLBW9XybCuqAZOqReNqFZyV0EKVvWcqwTxWs8m1pB1BhIxr_JfXHoK2aNSutVqp_a14WPiXLqtnJPqBRppNY1W6NOYMA_gop6KNhBCMMaMtxcsZ5hl_T4bb8HZnVXnKHXR7gOeqDQ__r4ttFi0mMgokahrx_CM3985EdF4W7XtC2D5zL5_zufRIpeuVhIqxdwsezKo3fQ</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">signin-test-oidc-as.azurewebsites.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/auth</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6 /interaction/aaf5b808-758f-4eb9-80d7-9ba80e8db73c" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">signin-test-oidc-as.azurewebsites.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/interaction/aaf5b808-758f-4eb9-80d7-9ba80e8db73c</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="7 //aaf5b808-758f-4eb9-80d7-9ba80e8db73c/usernamepassword" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="clientid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">clientid</stringProp>
                    <stringProp name="Argument.value">CourseDirectory</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">https://sit-coursedirectory.nationalcareersservice.org.uk/auth/cb</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">signin-test-int-as.azurewebsites.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">//aaf5b808-758f-4eb9-80d7-9ba80e8db73c/usernamepassword</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="8 /gtag/js" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">id</stringProp>
                    <stringProp name="Argument.value">UA-114739594-1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.googletagmanager.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/gtag/js</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://signin-test-int-as.azurewebsites.net//aaf5b808-758f-4eb9-80d7-9ba80e8db73c/usernamepassword?clientid=CourseDirectory&amp;redirect_uri=https://sit-coursedirectory.nationalcareersservice.org.uk/auth/cb</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="20 //aaf5b808-758f-4eb9-80d7-9ba80e8db73c/usernamepassword?clientid=CourseDirectory&amp;redirect_uri=https://sit-coursedirectory.nationalcareersservice.org.uk/auth/cb" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="_csrf" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">_csrf</stringProp>
                    <stringProp name="Argument.value">yzSzc8BB--Mp4i2XUGgcN41Dh8Dlwe3YvxQU</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">clientId</stringProp>
                    <stringProp name="Argument.value">CourseDirectory</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirectUri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirectUri</stringProp>
                    <stringProp name="Argument.value">https://sit-coursedirectory.nationalcareersservice.org.uk/auth/cb</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="username" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">username</stringProp>
                    <stringProp name="Argument.value">kadir.malik@contractsonline.org</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="password" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">password</stringProp>
                    <stringProp name="Argument.value">SITtesting123</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">signin-test-int-as.azurewebsites.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">//aaf5b808-758f-4eb9-80d7-9ba80e8db73c/usernamepassword?clientid=CourseDirectory&amp;redirect_uri=https://sit-coursedirectory.nationalcareersservice.org.uk/auth/cb</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://signin-test-int-as.azurewebsites.net//aaf5b808-758f-4eb9-80d7-9ba80e8db73c/usernamepassword?clientid=CourseDirectory&amp;redirect_uri=https://sit-coursedirectory.nationalcareersservice.org.uk/auth/cb</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="21 /interaction/aaf5b808-758f-4eb9-80d7-9ba80e8db73c/complete" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="uuid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">uuid</stringProp>
                    <stringProp name="Argument.value">aaf5b808-758f-4eb9-80d7-9ba80e8db73c</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="status" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">status</stringProp>
                    <stringProp name="Argument.value">success</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="uid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">uid</stringProp>
                    <stringProp name="Argument.value">3FF94B7D-FA94-4B26-91AC-681564007AB5</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                    <stringProp name="Argument.value">usernamepassword</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">clientId</stringProp>
                    <stringProp name="Argument.value">CourseDirectory</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirectUri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">redirectUri</stringProp>
                    <stringProp name="Argument.value">https%3A%2F%2Fsit-coursedirectory.nationalcareersservice.org.uk%2Fauth%2Fcb</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sig" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sig</stringProp>
                    <stringProp name="Argument.value">gzBsOfi%2FGH4AZEIRh7ziCs1CLVQByXJMocw3COvcHbWXLiNnlUvmf2vUEjxmd6XyHwtg1kwhdlBlEAuScV6yoB6xIgHLEYwASqnOktFhB%2Fy9npOl%2BcNICuT7S%2FshzVQuymEnWVhf90ZFkDOUuztbfYSy0Sk1cBVia3Ty%2BcQx2JyBx8Zx4qx2W%2BMZzSPcEwkdBTmmazEaVOGGxtMHiF4HGzSSCetzaKVKLJMvx8GC6nGR3KqaQs4HzRz3Yk6Ubsr%2BR7HLtZZp%2BCKga7hC0s2UA2Rra2epT5sCHlJz63drxbvlDB4b1ciaAQyO0UH7c11GN%2FhI4N1LsOYROOxeiPtjoQ%3D%3D</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">signin-test-oidc-as.azurewebsites.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/interaction/aaf5b808-758f-4eb9-80d7-9ba80e8db73c/complete</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://signin-test-int-as.azurewebsites.net//aaf5b808-758f-4eb9-80d7-9ba80e8db73c/usernamepassword?clientid=CourseDirectory&amp;redirect_uri=https://sit-coursedirectory.nationalcareersservice.org.uk/auth/cb</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="22 /auth/aaf5b808-758f-4eb9-80d7-9ba80e8db73c" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">signin-test-oidc-as.azurewebsites.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/auth/aaf5b808-758f-4eb9-80d7-9ba80e8db73c</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://signin-test-int-as.azurewebsites.net//aaf5b808-758f-4eb9-80d7-9ba80e8db73c/usernamepassword?clientid=CourseDirectory&amp;redirect_uri=https://sit-coursedirectory.nationalcareersservice.org.uk/auth/cb</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="23 /auth/cb" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="code" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">code</stringProp>
                    <stringProp name="Argument.value">MmJjYTQ5N2QtYmJhNC00NjlkLWIzMDktNThiNzg4MTkwY2Y4uQccRdtwXOA2rR40KTtC97PVrFiskm2gvCy_1PvGqTAZh__LB2tzDW3Y_iyOdf1RlpTtpdYbKoJmi0MYK7bzeg</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">CfDJ8AVJBmry2h1MqXWCYUcfL5ZE94jyjBzHsr59_Ou5l2o677Xj9CvrYifIchnHuU1_k2MXQCra0zlb8re0sONdj8xKUcLu_g9zdInHQmDYd7XD8INd3sm_6OZOfEOQjQt607MdJgsYklmkKUCLBW9XybCuqAZOqReNqFZyV0EKVvWcqwTxWs8m1pB1BhIxr_JfXHoK2aNSutVqp_a14WPiXLqtnJPqBRppNY1W6NOYMA_gop6KNhBCMMaMtxcsZ5hl_T4bb8HZnVXnKHXR7gOeqDQ__r4ttFi0mMgokahrx_CM3985EdF4W7XtC2D5zL5_zufRIpeuVhIqxdwsezKo3fQ</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="session_state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">session_state</stringProp>
                    <stringProp name="Argument.value">ba9c11158a05c645b272ad65b5f277bd276c43cc9c7971bb161b44df40f82f86.ab58572322fc1e4d</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/auth/cb</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://signin-test-oidc-as.azurewebsites.net/auth/aaf5b808-758f-4eb9-80d7-9ba80e8db73c</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="26 /" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://signin-test-oidc-as.azurewebsites.net/auth/aaf5b808-758f-4eb9-80d7-9ba80e8db73c</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="24 /submit/telemetry/055907d8-b159-4d18-8065-5886eb81dbde/update/Firefox/67.0/beta/20190509185224?v=4" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#xd;
�WYo�F&#x10;�+&#x2;�Z�&#x14;��D&#xd;
E&#x1;�r&#x1c;���Z���&#xd;
�%whmM-��RG&#xd;��ά&#xe;K�ӻ/E�vg�3�ߜ|t̪&#x6;�ﴵ�&#x6;�&#x13;G&#xd;
�yQ�z=��&#x19;�R7&#x14;,q&#x13;/��(Ib�&#x12;&amp;2A��&#x6;nd���i��=��^�2�=����&#xf;X7��&#x1f;Qr&#xe;�AA�&#x1f;�8��K��&#xf;����u&gt;�&#x6;r�jR�Lb7&#xe;񓬕��&#x14;&#x1b;�^�,�|�X��H���PT�}�N��zH&#x10;��K��9�g,��JT&#x1a;I��&#x17;Y�&#x1c;I(j�J�n��,뼚&#xd;2���.&#xe;�Y3���S�&#x14;�H��p�	u�UYqA/BT&#x1a;��i�&#x1c;��,h�˪m�&#xe;�{f&lt;��Rkz�8݇!�|�!�#��f^JP�2Y&#x1a;�)&#x17;�&#x1b;�Q�A&#x11;�I/	����&quot;&#xb;S��VPs�+5���S��&#xd;�sL��G�&#x13;/�����&#x1e;G�aᦙ&#x7;.&#xb;x�SH{A&#x12;&gt;9&#x7;��:��_��g�|!Z�&#x11;�?&#x1f;�u����˒g%�it&#xb;6��(�&#x4;&#xe;&#x1a;4Zf�&#x16;&#x1d;Ֆ��&#x1;ugo��|��,=�3�.)&#xe;�&amp;8&#x1b;���&apos;t�Y5&#x6;f��&#xc;f�^�N�&gt;�B��HmZ^���h,&#x8;}���	�Fݒ|^�&#x14;j&quot;T��{�^�j��Ke���S�,WN&#x1f;��*A&#xe;��G�&#x6;�Z�{�z&apos;N��&lt;��wh͏P�&#xc;v���$^&#x3;���_P&lt;�;,&#xd;(B�&#x1e;�Ly3&#x1a;}Dcx&#x18;��w&#x7;&#x7f;w&#xd;
����yx���&#x1b;�����aK:&#x1f;;&#x4;X���7}�V�{&#x17;�����&#xc;c�M���9�&#x1d;k��0FB&#x3;z.sx��&#x11;����&#xe;�Rm���b[�W�,�ta=&#xc;&#x8e;������&lt;�I����&#x1;8&#xd;
Q)��Sa���U!Ʌ�-��w&#x1f;/&quot;�ǫ���&#x17;���&#x11;t&#x7bf;&#x1d;��&lt;&#x1d;t�r�^R{�&lt;d0&#x18;&#xe;B�E�&#x12;2��^�#�����B]�Œ&#x14;&#xd;�Ṣ2&#x13;�:;q��&#x1a;[�&#x11;�&#x8c;T�&#x14;��TE]�&#x7;I���Z�+1�|ìu�&#x5;/&#x1b;���X&#x94;^X���Z����������·��΅��T�M&apos;��;����2�Z&#xb;P�7�(e=J�6C$ִ&#x1e;p��	R�&#x7;�]%k9��;�^�3!gq��#�$�^8����&#xe;�g�&#x17;ξ=:[3ϝ�&#xf;���eq7�f��oG��&apos;.e&#x19;2.�}&#x18;�&#x6;���v������rй�W�Ρ3�Ȃ�&#x0;b���&#x7;&#x0;�^(~&#x1b;��K�=�����������x2&#x19;��&#xd;
��dh�c�0���J���j$�W����YW��&#x13;jw~��{�&#x0;|O$Y^p&#x12;(	�eW`0���&#x7;,t�M&#xb;��&#x13;�&#x1b;&#x6;�PЬ˂n��踠&#x3;��/&#x14;�m�O�h`+�b�&#x4;��&#x1;&#x52d;&#x14;fJSا�eI�A�O&#xd;&#xd;�ģf]�J0��&#x16;b$�&#xd;��&#x1a;���=�&#x5;����&#x1e;h��m^�^�JQW���w���.J��3-�&#x1c;�[�p&#x2;,�����B�8&#x10;�p�&gt; �D ��s�K�N���+&#x15;�s��x�W��&#x7f;ɔ&#x8;&#x4;��/��&#x7f;E���~����&#x12;��&#xd;
�t&lt;��n&lt;�y��8�J\���5*h�&#x17;�o����&#x0;|Z/�0�A��&#x16;��Z�J��n���&#x1e;�����&#xd;
�-ukw�Q&gt;(&#x0;:7t&#x1f;�\9&#x18;&quot;&#x12;h�&#x15;&gt;&#x6;�$R�b��&#x15;d��jK�D.6`&#xc;��&quot;k�BO&gt;&#x1a;����&#x5;Ҩ-���&#x0;�IBP�0&#x3;�WG�����&#x19;�2����v&#x19;�Yv��&#x4;�JH&#x14;&#x17;�w��kg5�Z��v&#x13;��f��ǚ��`&#x16;&#x7;Q&#x12;z��[�f&#xd;
e�E��a&#x8;&#x5;G�Oל&#x1d;�;I�?����u,��G̅&#x14;�`�����?�P`&#x16;�~��n�\u��`�9ߐ�.���s,�4�&#x0;Ń+�Uvq��&#x0;[��h&#x3;�&#x1b;�&#x13;H&#x11;&#xd;
��U�(�ግEң�&#x11;�:êş�L���&#x19;��(*�9&#x6;�R���v�)��Fʇ�/&#x10;&#x0;&#x0;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/submit/telemetry/055907d8-b159-4d18-8065-5886eb81dbde/update/Firefox/67.0/beta/20190509185224?v=4</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Date" elementType="Header">
                    <stringProp name="Header.name">Date</stringProp>
                    <stringProp name="Header.value">Sun, 12 May 2019 15:03:31 GMT</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Content-Encoding" elementType="Header">
                    <stringProp name="Header.name">Content-Encoding</stringProp>
                    <stringProp name="Header.value">gzip</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="25 /submit/telemetry/86d1472c-4d90-451f-a7da-7e65089bc1a2/saved-session/Firefox/59.0/beta/20180209162511?v=4" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#xd;
�}�r�F���&#x14;1&#x1b;����*�;v�&#x16;&quot;!��|&#xd;&#x1f;�n�&apos;&#x18;&#x10;	I��C&#x3;���8�K�&#x11;�e�YY&#x0;�HQ���öH&#x10;@fee廲~=Y==�&apos;&#x1f;N�ޣ?�.��2X�ONO�	\��	�L&gt;�j&#x13;[�j:��z�ī���+�}3f&#x1e;�{ǡ�౺��Wq��UE�2&gt;`�&#x7;�}Д3K�&#x7f;�;&#x1f;�P���vz�=&lt;L��x��ï&apos;^8�&#xf;V�x�&#xe;�%�-�jh���:�N&#x1a;&#x13;z��p�f&#x6;�&#x19;����&#xc;o�&#x8;B�v�=��&#x13;�&gt;S��$X&gt;L�����&#x1b;[�:�,B��Z�3�N=�&#x4;w�n&#x17;��:���&#xf;��̹	&#x8;���Ug��1&#xe;�ޛ��)\��W��3��{�.�	&#xe;&#x8;�&#x11;�\&#x6;�����%�l��WK�u�Xy�A�&#x3;0NO�&#xf;+�Q&#x1;�L&amp;�y˛{w���&apos;&#x13;��[OW��p�&#x18;L&#x0;��&#xf;�pퟞ|�6����&#xb;W�&#x11;B&#x1d;�&lt;,&#x17;s��H�&#x1a;`w�O&#x4;&#x19;B �&quot;|�p�&#x0;��?�&#x1b;�&#x16;��i&gt;���V��&#x3;ˀp�P&#x10;��m&#x5;˙�&#x1a;�WU�&#x10;����K&#x1f;���&lt;�8&#x3;�L��7�&#x1;�Ka��,�0K��&#x14;&#x10;��&#x0;	���?&#x5;B��&apos;&quot;�bzㅂh����l1�I�y߃&#x19;|���,&#x16;_g^�uy��\��֛.�J@�u�2�n&#x15;��~�ݒ�&#x1f;��&#x15;&#x12;��&#x1b;&#x7f;�ެW+�$�7�y�dsa�Z&lt;TC&#x1f;I��x����o�&#x10;���&#x17;�&#x17;�aF&#x1;���&#x1c;&#x1f;Yn�&#x6;7�&#x17;&gt;%�&#xc;3���&#x17;p&#x18;x&#x1;V�l	�W��M�����*|�+s�&#x1b;~�&lt;�M�����&#x3;0�b�M�1�p��[�G��_��|1�&#x17;��$�(����U&#x7;��&#x0;�&gt;&#x6;�&#x0;&#x8;:@�&gt;���=�&#x1;�c./(pa�&#xe;CX&#x4;}&#x1f;&#x17;�;�&#x3;��t^.&#x16;wS���b&#xd;��w��r�&#x0;KL֡�&#x13;�	�k�;L��&#x1c;&#x7f;���3&gt;6_��WH&amp;z&#x4;�h�&#x16;&#xb;h���.0_��&#x14;w&#x3;u�͗b%����&#xd;
�(П-n�).C|��N�X`�&#x19;�&#x1d;����&#x19;xs�ꆋ[q&apos;7`�z�+?�����W�&#xf;7L���C-���u&#x1f;�&#x1b;�|����T�o�����b&#x2;�� \��&#x0;&#x1d;&#x11;a�������@��o�&#x3;�ŶX�&#x7;x&#x3;�&#x10;����`���&#x1f;��&#x0;��7xB�&apos;��&#xe;VNR&#x8;&#x1b;�&#x5;�y����L&#xd;}&#x12;&#x11;�&#x13;W&#x0;&#x1d;�Ո&#x17;�&#x1c;�A+={]SL�&#xe;̶Z�B�a$�e&#x19;�`���&#x1b;|&#x1c;�e���n�&amp;�&#x10;WmF�jt&#x1b;&#x0;{&#xf;&#x1b;}�&#x11;	Ë(&#x16;xS!9&gt;ض��&#xd;&#x1a;&#x9f;ȇ�&#x1f;A&gt;�f�&#x1f;/�y��&#x17;���&#x1d;O_&#x3;x/&#xc;A�&#xb;&#x11;vz�wɶBFy��zv㇝��b.�&#x7f;p&#xf;�2��t&#x5;Aܬ�@�;��7����o����U����i��s��p�3���O!�	y��&#x19;8s�~�&#x16;�&#x17;���UMc[�L����a+HX4&#x19;����־&#x7;���&#xf;�1�&#x15;&#x14;�&#xf;�K&#x7;��d�d&#x1f;߇ &#x1c;�&lt;�į �f��Z�&#x3;I&#x13;&#x0;,&#x1e;&#x15;�f���OOK�{C�$��-���%PŠS�&#x0;�tqG?}�o��&#x18;a6�~͛O&#x2;�H�&#x12;���$��&#x19;&#x17;&gt;,�1��&#x17;?�N�q��&#x1c;&#x19;{S�Cp�W&#x1f;�&quot;yŗ�J@&#x16;�&#x1e;�&#xf;��w�7&#x13;��}�5�Q��l��A�7�tZx9�U�Wv���&amp;&#xf;Ȑ�H�BXa��w��Z�K��tM&#x18;*BU3&quot;�r=�&#xf;Y@�:���&#x11;�]�F�F&#x1b;&#x0;�\��i��0EɁa&#xd;
�&#x3;bI@�`+&amp;ᙂ�����iy��f�}�&#x3;�&#xf;�9��O&#x1;`%&#xf;XI&#x2;f*�T&#x2;��4&#x1;&#x1d;.&#x10;&#x1a;��[��M;��&#x5;&#x94;�i&#xf;{}��et�e�f12L���ȣd� �D�H�lK5	/��&#x6;ȗ$M����$L��&#xe;\@&#x8;�p�&#x1e;��Q&#xb;&#x18;���x�&#x5;��v���3h�份^�w&#x1c;&#x6;�s&#x1f;&#x6;Ըn4�K�&gt;�:Hg&#x18;X�&#xb;WFM��/#�b&#x0;�Zi�+�	&#x5;|��&#xd;&#x10;&#xb;]7$&#xb;r��\K���!MX}r��	&#x1d;��	&#x1d;ݶ&#x8;&#x1d;�&#x2;��8t��LՁGLxNe��*�m�:�&#x1c;�3-C&#xe;D�&lt;�4:�&#xc;Âo���Qͩ]��z��7��q�����&#x18;�&#x17;��`Tw��&#x17;��h7&#x6;����&#xf;F���if��`���&#x1;���g�F�`�&#x1c;8s*����&#x10;S���f샋�&quot;G%�&#xd;
&#x1f;&#x4;&#x2;�&#x0;W��&#x1;s�3��.@��I&#xd;
)��h9��fn�SwG�F�MB&#x3;�LW&#xe;�ߊ&#x0;�&#x13;�&#x19;��c�&#x1f;�p�+V&#x5;̅Awi��k&amp;�w=zZU�qn��ن!�&#x5;�1�&quot;nI&#x16;�P&amp;�t4l�Ź|	&#x7;�M3���	&#x1f;l	߰u&amp;&gt;X��&amp;�B�L5K��հ�1�S�&#x2;&#xd;
������&#x18;����w]&#x14;�i�&#xe;@���N�j�+�B�f�B��L!*s�&quot;��i�{u��m�+�e��&#xd;
��&#xc;1�LSM��,n��m*�Yz���[Iw+43��ۺd&#xb;%�&#x1a;5��5=&amp;B���Ѕ�&#x7;Ұ�&#xc;`Y&#x1c;&quot;&#xf;�k��Vt��N&#x7f;��`Ŕ&#x2;#�&#x16;����&#x10;� O�`&#x18;&#xc;@k� �&#x1d;��[��ʶ	�����#�I��&amp;�В�ƴL�x5&#x18;tG��9H�֨�u�|t&#x0;�ڗ&lt;F[�ه����$�&#xc;N��H	?niYl.&#x1a;=�z���ǉ��&#x17;j�H$�R%V�װ���j&#x1a;J�]Ē]0-p��&#x1a;��ؘ�&#x1e;&#x5;&amp;)�v&#x1b;��E��&quot;E���&#xd;
&#x18;��6+&#xb;&#x16;��,����Q��&#x1f;�&#x15;��&#x13;@&quot;��&#xd;��&#x1;nv:&#x1f;��� ��� �&#x92;v&#x18;�R�&#x7;����i��W�ǒ`kR6��v\I�����&#xf;j]�&#x14;m�&lt;д��`����ʴ&#x12;b&#x11;��&#x14;&#xd;
B&quot;&#xc;:r-�ݜ&#x13;s&#x14;$�4&#x1d;6�&#x11;��&#x3;_zn�m\gE��ؘ��l��&#x18;K�&#x2;j�&#x5;���FV&amp;�)&#xf;WUӈ���t&#x7;R}\��&#x1c;;P0�&#xb;(�����&#x1;��&#x18;�I2&apos;Y(҄$�1�&#x1a;f&#xe;��*&#x15;�L&#x2;&#x7;�J�P��&#x12;&#x1e;w&lt;|!��6�)f&#xd;
�cH/M&#x15;&#x17;t�§X��&#xd;���H�L!LH�i�%I�&#x1c;Z�Γh&#x1d;[�1�Xd�+�(&apos;o�H�q��N�rQ3�&#x12; *i�J�p�&#x1b;&#x1a;&#x16;�&#x2;�ԓ�&#x1e;E&amp;�&#x1d;K{�C�X�(6��&#x14;l˖;&#x1a;v/{N=ge��]�dDʌ&#x16;J�+��h�&#x14;��ߩ7�1�|���7h&#xb;�*IФǁ���^���ը�&#x3;��ܮ},Ü�������&#x2;�!��u�&#x8;&#x12;�&amp;���}�&#x1;fz��p�%e	M&#x1f;&#xd;&#x4;��&quot;,N��DZ6��&#x95;�u&#x1a;@��a�Y&#x17;&gt;t��B&#x1;���:x��&#x1d;F�����&#x1a;���&#x18;�F&#x1e;�1F=&#x10;sn��s��&gt;&#x1c;&#x13;��K&#x15;�&#x18;&#x2;&#x11;M �&apos;��#G+Jl0&#x19;GJ�X#^;&#x19;�?菺�fs&#x4;jv�^&#x3;��G&quot;Ӕ��m��&#x1e;�P1l,�ä�/&#x1b;��I&lt;���9f�.�/l㊑&#x8;e�&#x17;&#x7;&#x6;&#x11;&quot;&#x1b;H�$+��%h�ғj�Z�*%��@�J�b3&#x19;z�&#x6;�v�S��&#xe;z�S�&#x2;�q�Y&#xe;!&#x4;&#x1a;&#x5;Y�x��M�[��o&#x19;8�=t�f��M��B~�\�J)R�e�T��&#xc;������&#x7f;�dh&#x19;�!RSFH-�,l.�&#x1;S�(6(��j�O���&amp;B1D&#x1c;��h&#x7f;&#x1c;5@������#g0��`.@���A���ϣ����E�i�&#x14;���~�$&#x10;�&#x11;.�&#x11;����&#x15;&#xd;
O�&#x16;&amp;d&#xb;���\��-��D�&amp;�&lt;&#x11;�#�N����4m���&#x1;�i&#x18;l�&#xb;&#x1c;�8$-����XH9���HZj$&amp;9�&amp;9L�t�&#x11;��ɜ-�j��ɑ�&quot;�R8�Z�i���[/q��|��X8���&quot;?a.mf�&#x18;y�bې�vЊ&#x1f;8�&#x1;8��m���yL&#x7b2;�&#xe;�&#x19;AM&#x7;TlAö���h�;���O��ը5&#x1c;P&#x6;&#x1b;&#xd;&#x14;&#x17;~�J�C��vA��&#xd;
3ŃQ&#x7;dF�Qw&#xf;���e��j�a&#x1b;&#x5;o���vm����q�&#x18;X&#x6;ЬwZ�A��&#x11;&#x1a;�-f;�&#xf;����9���/��&#x5;HD��&#x6;V&#x1e;Hg�tj�c���:��&#x15;�Ͻ�F&#xd;���=&#x10;��~�RFB5��i��B&#x4;/��D�8(�m�&#x15;�Tg��	&#x13;�XtG&#x1f;&#x16;F��o��ђ�&#x4;�&lt;�&#x12;)�#U.�׃N���T�&#x5;}깵NO�w&#x3;��&#x5;�t.&#x7f;&#x0;t���:��&#xd;7���nm�k&#xc;�dE�A����3o	Om�u��O0�&#x11;�ڑ��&#x1a;�qg�^�XC9}d�7�$l�wը�����&#x1d;��h&#x6;i9�H&amp;=&#x7;i����B��Ug&#x8;�����MR�����vAn&#x1d;I&quot;&#x12;Dg8�H�?j:��a�&#x19;(&#xb;��g&#x7;��E�r�;&#x16;o~r�EuNq�w/(Z&#x6;��&#x1d;&#xd;
:Q[@�ڒ&#x5;��T&#x0;q�kt&#x7;��`�e&#x1;���!J��&quot;&#x1c;dz���ΰW�&#xd;� ���&#x16;��O�� &#xd;��&#x6;&apos;�&#x15;�M�5�Sf&#x1c;ZK���&quot;�&#xc;���&#x1e;Z���j���p&#x19;Y�L�#P�&quot;#P�&#x1d;�iظ�+)����Vz0D�r&#x7;#�&#x15;��b���&#x14;53&#x0;�&#x10;���&#x11;E&#x17;4S�&quot;�ͨ&#x18;3,�*&gt;�&#x3a2;r/��L�H�j�&quot;&#xd;
�m&#x18;��v..F�+&#xc;�P�&apos;([��&#x13;���b:Y&#x7f;��Z(&#x19;&#x1e;&apos;$�&#xc;-&quot;��.�&#x7;�&#x7;�l��L&#x4;�:t&#xe;�`&#x2;���6yᚍ%�&amp;֤Ƞ��q�B�@+��&#x11;%&#x5;6��&#xe;�f�2]ɹ&amp;�0M�t�d*&#xb;��ЄU&#x11;�&quot;ad��x����2�Dcu&#x11;e�&#x13;�/|&#x13;��qp�pV6��H&#x7f;R�&#x13;U�&#x1c;�P�&#x7f;ڠ��A�|��+tq&#xf;�&#x19;��j�A&#xc;�&#x0;��3%U���&#x17;&#x10;jw0&#x5;���@Ԓ�&#x0;pU�`�;ݟG��&#x10;c&#x2;�(&#x17;.��Ĕ��Y*hV&#x18;����%/�M�C�DRQ&#x6;;�y&#x7;�&#x6;�b(,���B2���w&amp;��w#��T�R4�(�&quot;uW��J�������$h,e&#x0;2+�&#x10;��sj�Ɩi=&#x4;)&quot;�&#x1e;��f�4BT&#x16;��r&#x13;�(�M�ó4�$&#x12;�έST�4\���mp�넿��%�&#x1c;�D�d�2B�&#x18;Qn���S^F�m��?��`��P���c &#x18;od�R�&#x19;���0�i&#xd;;IGᩑ�&lt;&#x1e;7��`�&#x1c;hI&#x16;�^`&gt;M3�q:&#x16;ӽ�dI������h���T�X��&lt;��M�CQ�*��N�*������Q�%J��&#x1c;��4��@~P&#x1e;�$��P&#x1a;��#ғ��`P?�&#xd;�W���T&#x16;r��&#xb;��&#x8;�&#x8;&quot;&#xd;�t]&#x10;&#x18;�a+&#x17;g&lt;ԅ�O�&#x0;&quot;�e�i�ұ���$&#x13;-�O�&quot;�&#x17;�v�&gt;c��&#x16;2WPN&#xc;`/����w�&quot;&#xf;��&#x19;��3ƌg&#x11;�&#x1a;&#xd;�s&#x10;*�&#xe;诶sݸ�X[2&#x11;�ɿi{���أ����&amp;�^#�&#x1f;?�䧔�*3�)&#x13;P����]E�@�&#xd;:bO*&#x19;&#x6;rsۨ�&#xc;&#x1c;���&#x15;&gt;�e�ݵi;��b��q��N�&#xf;&#x6;��4��&apos;���1s����dݭ��E�\���{&#x1c;�&#x10;7�,h��	&#xd;�j�&#x1a;�o�3²ʸ�K�ε4x�&quot;k8��Z%�\�dlU�9&#x11;�h:=&#x14;TBQu�&#x1c;М����Xܷӛ�0��&#x15;,��$C��0�g&#x13;���h&#x3;ÏG&#x4;�	0�&#x2;�&quot;&#xc;5����˄���)2�H&#x11;�V&amp;$� %�&#x11;�Ѱ�h&#x12;�[�h?�Sh&#x8e;&#x5;߲d=i&#xd;
��=ˈ�&#x8;��`�D��hc&#x1d;��n��v|��Zލ���s&#x17;]2�&#x6;�Vap�^&#x11;�w��VN��&#xd;
]�W۝A��˨s��u���`&lt;Y���Q�*&#x1a;f��`���}�&#x6;G�Tgyi�&#xf;�&lt;�Q&#x10;�Q^�&#x6;��&#xe;�\�&#x6;o&#x7f;4B9�&#x15;I��A�c�&#x1b;�w�&#x16;({�-���)��0[&amp;X8O&#x15;PqE�&#x4;;z�&#x13;&#x11;���N&#x12;&gt;�f��|��&amp;E���mob�\�����65	ɷ&#x8;Q,��}������{�RH�&#x18;R&#x13;%����%9&#x13;�&#x7;�.a��%��&#xb;�R[�&#x14;�H�MK�6&#xf;�x�u��f�;�)&#x8;�&#x1c;q�L&#x1;����7�Y�l�I���w�&#x11;�&#xd;
,���&#x11;��X��b�?�e�&#x0;�]&#xb;W������X&#x16;H�c�X&#x16;�;F�e�v�#�Xn����!�&#x1a;�c�$�rAE�e�2č��&#xc;5�K��&#x5;̙a��&#x14;a&#x1;͏U&#x4;H%&#x7f;J���`�҈&#x8;���m���#���̑*�&#xd;
��.5N[!&#x1e;��I�*PY��ʒ�t�C���w�U*&#x11;��&quot;�ʬ&#xd;
�&#xf;!#�P�&#x5;G�G�h�E%��C�f&#xb;F��,斪�&#x1f;��O&#x16;�s��\M5GP�;��Y6#����R�,cS��|6+��ߑ�������1&#x1e;|P&#x5;d�ȗ�g�X�T�	9r��0x�I�`&gt;��*�\u�/W��\�I�?�.A7y�{�@Te,��t��.�ߡW�o&#xc;J�˩dja&#x19;&#x4;n��Q7&#x1d;Y�H&#x1c;�$S��&#x1e;5,�7&#x8;�(r��&#xc;��&#x1;&#x8;�R����&#x1d;��&#x11;��6մ�&#x8;c;���&#x16;���HRd)I�;���n��T&#x1d;�ć�(9̲f�2eJOn!a���&lt;궽&#xd;���Y�0�&#x2;w��Q�����&#x3;8�A��/&#x15;/mE&#x8;#�p&#xd;�_��ඦ&#x1d;D&quot;�[ZTp�&#x1a;��&#xb;&#x7;}��&#xd;#TE��&#x10;3&#x10;ȝ��&#x15;&#x16;�&#x16;&#x12;���7;��FTR*&#xb;ʙ��&#x8;&#x5;ן�	��Of�}2���!8�&#x1d;&#xc;R�0��p����&#x16;�6&#xe;�d�(�&#x15;7&#x1d;J�%���*�&#x11;��#��G�����&#x1f;&#x11;����S�4�u�&#x1b;�;������&#x1d;G�&#x10;�=zt&amp;Es&amp;��v�@�&#x1e;&#x16;�`�&#x8;��`r�&apos;y�&#x1e;[ϟO�0�ߥ�&#x18;~j&#x16;D��=+&#xd;S;s�ڧ{�U�u&#x7f;�&#x0;X�DT�!�&#xb;���T��|�2�a��z��XI�XbG�&#x16;Ҵ��~&#x7f;�=,�&#x17;��&#x8;�2�ym&#xd;��i�os&#x18;�&#x2;f&#xd;�a���&#x15;�&#x1f;Q$&#x11;�~&#x3;��&#x18;�&#x11;&#xd;&#x11;�&#xe;�&#x19;&#x8;}wt`�����&#x4;Z&#xd;&#xc;Fa��M&#xf;��[P��G�ޝ�(�S&#x0;�&#xd;�s&#xd;
��&#xd;�O�y�����Fj�&#x0;�o&#x1c;g&#xc;���l�s�]���}ο��zL�&lt;�Q�w5�$���p(�^�K�K&#x16;g1��@��T�ds&#x6;�D�%T�Hǣ&#xc;�]�eL&#x16;+3�&lt;Eg��L�m3ˠ�&amp;�&#x15;��6&#x5;���4Q[{��悒�&#x1f;��7�a&#x1b;�0�gOc8ԃg��&#x16;n���J�X\4��&#x11;�F&#x1a;�zB���&#xf;���lE���^&#x1316;���Z&#x3;&#x1d;٨�&#xd;
N&apos;�gY�a���vO���&amp;�o�b���{�x�U9&#x7;[RK ���~GD&#x14;�QQ&quot;2l7�2t���&#x4;9&quot;ų&#x5;/�3&#x13;�&#x17;3�e)¸��\g�eތ����nPюnXzԕ�Pt�J&#x1d;V&#xb;R��ę�Id2q�r�&#x4;3�uN�E�!K��c���&quot;:1W&#x7f;����&#x6;-��|&#x1;?���k9tv&#x1f;BF�#:�2��~;&#x2;����&#x0;�,ɷ2&#x9e;�����j�r�nZ&gt;qm�L�3�&#xd;E!n�&#x1a;5=�&#xc;+�jLCK�j�U���f#ӳ&#x12;�ѹƭ�&#x11;�g�&#x17;�&quot;&#x5;Z�&#x0;&#x16;�&#x2;�T�&#x8;&#xf;�&#xd;
�9鉰Z�.�M�$\&#x12;s��0r�B{&#x17;�=|&gt;�yݖ��b���&#xb;�&#x6;K�&#x1e;��Ǥ�&#x10;&#x8;a��&#xd;
&#x13;�&#x17;�(j&#x1f;;���v?6��&#x8;��gW��\��g`�&lt;&#x7;�&#x5;�&#xf;䏝&gt;	�����F���Mk�&#x3;`����&#x4;0[���&#x1e;�,&#xe;C����_MZ(tJq�T�&#x1f;�[�q�z�&#x2;z&#xe;b��&#xf;&#x5;��&quot;�&#x11;N7�ӌ�u��&#x3;Hg&#x17;���bѯU�X,J&#x12;ĉ�&#x1b;&#x7b3;Tq��&#x11;�&#x1f;�&#xd;
�i�t�p&#x1;�s���&#x11;}e&#x18;3qѮ���i�#1�xN�\&#xb;&#x11;P�V}��t*&#x10;�(M]�&#x1c;���|&#x6;O�K���&#x1d;�Y�&#x10;Z�)-�C��G&#xd;0]��&#x12;&amp;W��q+s�t|�!nh�S&gt;�&#x2;�2?%G��̜�&#x7f;]�&#x11;&#x17;Z�&#x12;:��tr��3�Y|Xc�ME��a&#x1f;�� ��5�&gt;�Y�%��&apos;4i2�b��٦���2�Ŕ�9ښ&quot;&#xd;
���&#x0;#�#0&#x7;]���&#x6;��:�&#x6;xV��&#x17;�&#x1e;t+��&#x2;��N���QG$:&#x3;�C&amp;A�&#x6;��d&#xf;7e&apos;T�sE�jl9,�&#x1b;&#x1d;mj&lt;˞�*4&#x19;�B��FvtT�bD5ORk�lӣ��r3�?WTK~2&#xc;��j[��=�é&#x17;�n&#x1b;��QU=�&#x17;�8Ӭ�:&#x7;]��:M3�&#x19;�&#x2;�&#x1d;OS�(&#xe;�ǉ����˯d&#x13;���A����&#x1d;�i��O��Y	K�&#x17;l�&#x0;Y�9�v�Ųy_�t&#x12;Y�87z�:U�&#x1;-�0d��&#x11;&#x1a;�&gt;�,&#xd;
��!8&#x11;�&#x5;S��&#x14;5�_�&#x11; �=H��Sz�:5&#x3;&#x5c9;�%���W���k�-*�&quot;&#x19;(��&#x2;��45%jI��CBNIf&lt;&#x1b;J^�s�ϙL�&#xe;N�&#x8;-�&#x13;ElTꏥ$G&#x15;&#x1d;�&amp;{��&#x1a;�&amp;�m��������&quot;&#x7f;��&#x14;���9�_�&#x1e;p{&#x3;QA�K#�&amp;(&#x1a;���&#xc;&#x6;1RB&lt;&#x9c;k&#x1a;�C�&#x16;~аd&#x16;s0�K݊�F�R&#xc;&#xd;w�&#x12;�v�]`�&#x1c;����&#x7f;�&#x1c;���ς�pմp�&#x11;�&#x18;,��)X:���N�Q��Iʖ-Z�&#x7;&#xe;�,��ue�B�?�����&#x5;u�p��&#x10;�L&#x16;�&#x1c;*�&#x0;K�4&#x1c;�.��Z�&#x1a;b�$N�G����\�uz���e�&#x7;�Akt1l6�N&lt;*&#x1c;�h�R�T!���/�T��&#x1e;Z^{i��&#x17;�#u��Ra��P��o�.9&#x4;�\��&#x1e;�屼&#x1a;eb7�%����:=,3l��&#x6;I�W��W��g�q&#x16;�=��&#x17;�;2�~&#x16;&#x1f;&#x6;)&#x4;l&#x12;&#x15;%ƅ���B�ؐ��&#x14;�a�}b&#xd;&#x5;&#x16;�&#x0;-&quot;(X�u�+&apos;;������x��/�&#xe;s�&#x16;|�&#xf;��&#xc;��R�P_q�&#xb;&#x11;�K;���+��x�&#xc;�� �&#x1c;�P&#x1a;�OC&#x1a;SƦT��.#s�*M\Ym��&#x11;�&#x1a;4PM&#x1a;�Z*q��&#x1;��H��4�m�@&#x14;�e�&#x1a;19M���9�A��)�2&#x1;E�&#x12;�BRb�x��L��v�_rdgơd7�^�&#xd;!ET&#x17;I��&#x7;�&#x14;�&quot;�$�����tY&#xd;
(��X&#x14;&#x1e;բ�&#x14;X�&#x5;&#x12;�٩(1x&#x18;V~L%M�&lt;�3�(jKg�F]��ũ��R=&#x19;4�t&#xd;
�j�&#x5;�h����&#x5;����g�\&lt;Z�)�&lt;JF|7D�Z&#x19;&quot;����7&lt;�&#xe;&#x6;��e_$_&#xb;%���mỶ�&#x18;e&#x17;&apos;���7�0��a��T���	��D-Q&#x11;�&#x8;��j1&apos;\v�OΗ�8�4kQ�ya&#x1f;�k�Z���n6�{&#x8; �Ա*�.]�J��.�&#x8;#��R�ؽn��&#xf;&#x11;&#x2;�&#x4;f��G?0s�&#x15;��&#x4;���ݠ-f�iP*l!��w�]��H��&#x17;�b�����&#x10;&#xd;
?M&#x1e;\d�V��e���=&#x1a;O�&amp;�.^@�P�&lt;n{,}+J&apos;�YK2�d��T&quot;$�,Ô�G�,q&#x16;&#x5;���&#x1b;��ug��̞-�]���&#x5;&#x15;tE�U:O�&#xb;�X�]�M&#x7;b8�/�&quot;+�&#x1b;/K��)�Imv��,b�(T�a�xS68�&#xd;
&#x17;&#x5;�b&#x7f;Y�%.3X�-�&#x10;��E�&#x18;��u6��&#xf;�����n�T&#x1a;K(�d�#&gt;5E�&#x4;J��&#x14;��j�dDHZ��D@�6��ƥ�(mr&#x19;Ԣ?Z2p O�&#x14;&#x16;&#x0;�5��X2`��pً&#x7;�Z��A���&#x1a;�r&#x13;yS���;�F&#x7f;&#x19;6j�V��ݠS딒F��Jy&amp;��y��&#x7;�zd�9#&#x11;����;�&#x14;��)c&#x10;&#x3;L�����`&#xd;
}$��zC3�|�&#x18;&amp;6&#x590;}5J&#x3;_���	��&#x17;7E�t��&#x4;&#x17;��&#x1b;&#x15;���]�&#x1;�z�j�N�u���Q��&amp;�.J�r���|P�&#xd;y�z�&#xf;��`���&#xe;�:�,/�%�j&#xd;
�^3�ϔ�c�i���S���&amp;leP&#x14;A�&#x0;�IM5P�*��T1a(hh��d���XJ\�vD���v?�&quot;3��-P4�iP��No4&#x18;4K#&#x14;#&#x12;i�ѡ~�\yT&#x1b;:��&#x13;�6�W%���&amp;�I�*�8{}�&#x1;g��&#x0;��u�攀`�&#x19;Z�$v|rm:	�&#xe;&#xd;�e��&#x17;�T���ݢ%�)	�7��T�$�?&#x18;������t�^{�&#xc;&#x6;n��ݵ�m&#x13;�+&quot;�j�&#x12;TS��&#x1c;bW&#x18;�٫&#x14;�ǅE&#x19;�)?�&#x1d;me�NZ&#xc;)�7K�&#x1;3�&#x1b;2����`#�8�&#x5;&#xd;
�&#x0;�8%/����`����pA�u���6���b��6l��KX�Fz-&#x1b;)&#x14;.��s&#x18;{��B��&gt;PE��;�&#x8;�&#x1a;w&#x7f;x��&#x16;�lK�&#x1c;&#xf;Z�:�s&lt;�L�^��&#x2bc7;�Q�^#�^O&#xe;���&#xd;����m�P�F�&#x1f;&#x1b;�&#xc;��Qt�p=�.���ﺂձ&#x13;Dq��m&#xc;�3�+vu#4�&#x6;�&#x1f;�E&#x7f;�&#x1f;u;���i�ƛ��q��&gt;f%ⴇ�19�BUJ���L(&#x13;�ED�=l�����&#x11;&#x16;\�&#x1e;2&#x2;��5y�����A�F%z`��Nw�K���&lt;I��	ci�&gt;/�$V��1��9&#x1a;&#xd;�p&apos;+Z�%�&#x14;�:.��)D�&#x1d;S4&#x12;M9�#��I˛bit@e���&#xe;D}���*�m��-r&#xd;,�Id�46&#x16;7��&lt;����+*��a&#x16;.�W0E�-�H�i(��&#x7f;�&#x1c;W�&#x13;լRΘ�1E�(�QWIy�G���L&#xe;J�EUK�&apos;m&#x1f;&#x1a;&#x15;θ&#x10;�Q&#x0;��1�2��&#x12;E�4E��կ$&#x11;&#x12;;V�C�=&#x11;+*b&#x5;�0&#x4;4&#x8a;�4*��7&#x11;�&#xe;�)�@�&#x1d;��&#x12;$O�F�Z&#x13;�&#xd;
&gt;&#x18;#�^�$I&#xd;
�4��,�&#x1e;���&#x3;�&#x1a;&#x0;��&#x1c;^6�~�aF&#x4;�&#x3;d&#xf;S��C&#x1;�:V��&#x1;������1��{&#xb;gԵ�&#x1e;��Ynƥ��l��`c�0��L&#x0;�u:&#x1f;&#x1b;n����u���r����sP�&#x6;&#x1c;�Ь�n�&#xc;�&#xf;�&#x5;R&#x10;�.&#x0;&#x1a;٨$ٓ-�����;���=�L�p%U:�t;C�nө&#x1;jb�hy�P��L�&#x1d;(�&#x1e;�N+&#xd;�&#x1a;&#x17;�QA�F�&#x1b;��.&#x11;�$���:z*:m���&#xb;�P�b��H|rϝn�T:l��&quot;�f&#x11;&#x1b;�q�g�cǈ&lt;��!&#x10;&#x1;g&#x13;�̨�&amp;�gZ�j&#x14;�@�_.&#xe;�&#x15;�`�*V�:K7�&#x1f;e&#x1e;z��]{n�)����&#x17;�&#x0;p�i:��&gt;&#x1c;�V�y�k����7.&#x1a;@�D�&amp;���&#x10;����)�l��l�^5d1�%�r0f�Ki���0�M�ɤ̴����I�r&#xb;������̈��&#x2;�&#x8;) /|&#x11;�t{�z����Z&#xc;��R[��&lt;&gt; �0[+,�=�&#x12;�&#x10;�&#x17;��&lt;�WG��&#xb;��&#x1c;�&#x1a;n&#x17;�&#xd;kEy��b�&#x2;+�Հ��G&quot;v&amp;�&#x14;�}˦`&#xd;
�&#x11;��:�ް[F�o����(&#x12;]�.&#x1a;�sQr�8bVD��&quot;�Ix�*�&#x12;�gA��&#x2;�_�&amp;��o&quot;&#xc;��&#x10;�&#x7;����Η�E��jfZ}������&#x12;S&#x2;�p�&#x1b;��ؽA&#x14;0fF��&#x1b;�&#x1e;1&#x1e;ː���p�M,�*)Y�sQG&gt;��q���&#x15;m%��&#x3;��Ζ&#x11;&#x1f;��y+&#x1d;$\&#x11;⒇��sɮ1_&#x1;��&#x5;&#xd;�((E;P�&#x10;&#x6;]���&#x18;�a���%F&#x1c;���&amp;��D�-`��4&#x10;M���&#xd;�&#x0;�r�D�&lt;\&#x4;�&quot;e&#x14;&#xd;&#x1f;@�H&apos;�&#x17;�AH�9x&#x1f;$&#xd;
Ά�&#x2;Y�&#x1e;�hh.φ�Qi�&#x1a;���&#x1a;m��&#x2;H�ĵ	�Mi�.F�&lt;r&#x13;&#x14;mɏ�ǸS���L&#x1d;-i���`��SCFw�&#x1a;����&lt;�̈�0#�*UTaJ蔘&#x1a;t���F�QJ&#x1b;`%��S�t&#x4;w5l���F�/�����~&#x14;���̘�f�tQ-J�F&#x1b;&#xf;���F�u�D�� !���Ǌ�T�D�P&apos;�3���Dl�CF��&lt;En�K�S��J�2��s��&#x590;��d1&#x19;7Ra,EW�&#xd;��q�n����c��qi	�-ޤ(�KQ&#xc;���&#x1a;&#x15;���U&#x13;&#xd;/�N6�C�:q�A&apos;%�E��E�rJ�島���Fu%#R&#xd;
Q��i&#x1a;���&#x18;���#%�P��9?�7����~f�|&#x1a;�7�ɝ��2H&amp;+&#x1e;E�WR@r�$�!��#�Ȉ��&#x1b;&#x7f;�&#x1f;�bS�&#x5;�&#xb;̡&#x17;�贩&#x1f;&#x12;�f$[&#x17;���&#xc;ժR����&#x16;�d�&gt;l%&#x19;�Q&#x1c;a�`O��w�2�&#x3;{&#x19;��Q�UL�ν&#x0;&#x5;�&#x11;�Ծ����Y�9&#x7;|WE���!B��0�&#x14;5�B��&#x1d;&#x17;Z�DR��XPԲD4�;&#xd;���&#x2;,&#x4;|�&#x15;��G�ֆ|;#F�B�C�M[�&quot;?pj@&#x1b;S�6�&#x17;r��&#x1e;&#x8;&#x4;K0|�R�y��2�&amp;�&#x12;�&#x17;&#x5;&lt;�h��^$&#x1;D���p@�E��&#x605;_�0�X�&#x38b;�;��s���MQ[&#xd;
�Pv(qT�贂���{�;��iq&#x14;&#x0;F&#x19;&apos;&#xd;
��Yj/g�&#x7;bw$n���c�bo5����)�yP������F;&#x16;q�G&#x7f;&#x19;v�)�-]8�+��&#x7;&#xd;�&#x0;~�`P�oJ3&#xd;
�8�@�&#xf;�AJ&#x19;�g/����@��8��E��&#x1c;�&#x1f;&#x0;w�&gt;�&#x7;&#x0;�;�G&#x1a;���\�����r�&#x7f;�&#x14;t˜�(l���&#x18;�&#x3;��A�J�U�B=1&#xd;
���,�&#x8;���/&#x1b;��n��&#x1e;뛢/�Q�j�d&#x1e;�&#x383;���&#x14;�&#x1a;��.[d�n;L#U��Иi&amp;�`�HӋ�&#x14;uX+�̫-��&#x0;��L�&#x17;&#x7;[s�&#x8;&#x1b;&#xd;&#x15;�wA�&#x7f;���&#x19;&#x14;ڝv1!�Mgp���c&gt;�|��I���&#x10;�&#x1e;E��h&#x1f;���&#x14;@�ag�n4r|,&#x11;�&#x4;�?qi[&#x17;��,p�&quot;1Մ.jO)Z3�/��L&#x7;G����&#x1b;ͦ����\Jx-�R�&#x12;���&#x1;����,ζ�����[�r�t�SǏ��&#xf;�=�m&#x4;��&#x1d;X)&#x17;NN&#x1b;��T�&#x0;;���W�D�&lt;&#x2;Wo8��%��huqg�&quot;�� ��O)ɞ(8�O��&#x16;.ӱ�&#x12;��F&#xd;��nm�˕����{Aq|&#x1a;&amp;F&amp;r6��&#x1;ƫ^-�:���Kp&gt;ݡ���0�9����fQy�&#x4;&apos;���&#x14;T&#x11;*&#x12;�D���&lt;�)�m��&gt;&#x13;&amp;��kZ������Wd&#x1d;l����&#x1;*���e&#x7f;L�PS�&#x1d;�\{	�:�I��\��A&lt;[&#x1c;�.��II&#x17;&#x12;e[��]D1�����M�&#x1;��(���L��L� �J�&#x1b;3��&#xc;j&apos;�Y&#x14;�G��T&#xd;
{��p��A�^�o�f�&#x3;|&#x15;�I:j��&#x1c;X�0&#x1;J}g&#xd;
O&#x8;ȇ&#x17;�=&#x18;� �����&#x15;�F��[�ʑ��TO��赽�Da��4&amp;Ѿ��E�&apos;Z�o[&#x1a;G��&quot;&#x1c;���i�KS�&#x15;�հ�&#x17;���=z�t��j3_ ɻ�Fw��&#x15;{C�&quot;��o/^pP&#x1c;�{&#x1f;�c&#xd;
f�2�@7MΝ�[������.&#x2;���&#x16;�{�-��Y&#x19;&#x16;e�Ҫ�%!;����ڪ[¨0��&lt;�%a�����.��&lt;��&amp;�;�&#x2;dr+�l�����%a&#x3;�&#x1;z�$�&#x14;T�~�)�ǰ�_Z�_6j&#x11;�&#x15;�&gt;����m!&#x3;S�&#x1d;���&#x7;�����&#x12;��]8ͨ�%�1Ng&#x5;}(�&#x1e;�P&#xd;
�?�O-)�4��~�&#x5;�&#x19;��hYwj�.���̍�&#xd;&apos;h��r5���U%�v�}���lV�&#x0;��&#x4;�3&#x7;��\&#x18;Pf-&#x7;c&amp;{`P�@���=���o&gt;-���&#x12;=&quot;*��t �(E�(�&#xc;ˈT	&gt;����&#x6;&#x18;�&#x1b;�R�&#x15;&#x10;��&#x17;�&#xd;�&#x14;�R�&#xe;B/&apos;�$&#xf;Е�^R:&#x19;y�Ԋ�؀���&#x0;c]�3�@4��i&#x7f;,	�&#x16;C���u����3ي�g6�G1���ff��E&#x1d;x��K�P�&#x1a;��M&#x2;1Y���&gt;%t&#x10;�&#x15;n���n&#x11;&#x1;&#xe;�վk�&#x4;&#x17;T&#x0;�F&#x13;�ڗB�oiTZ&#x4;�%Ź���&#x3;g�� *��:R3�Q���&#x15;N�&#x1e;�]�8�&#x11;?:�BIJA�P$ld���a#�?S��`��9�%(�&quot;�J&#x2;�1�Z��&#x2;���!-&#xd;��P&#x15;&#x4;vԍ[7�%��&#x0;&#x5;&#x0;��-��zD�Q�(���&#xd;�e�U�ɷ�=�KCQ:�)�bq�&#x1f;�&gt;v�VUJ&#x1e;��t�&#x6;܍���=���.�)-#v�^�&#x11;�&#x19;&#xd;��&#x16;��u0s&#x0;߲���t�&#x1a;5 ���z聛���&#xb;&amp;[��3l��\�&amp;1&#xb;�bw��sH�&#x7f;�&#x1c;(A&#x4;k�#�G�Ri_&#xe;s�&#x1d;e&#x1;���P����a��&#x1e;0&gt;�����P&#x17;&#x7;�$�9��&#x1f;E&#x4;F(�bX��z�c%&#xd;
j6��&#x11;�&#x2;q�*��D~�C[�qC��hݖ�4[�&#x13;�&#xc;&#xb;�&#xe;��d�8�Q�D��&#x11;�L�щG\3l����e&#x17;x�UE���U::P&#x13;1oQ���j�Β�&#xd;75U��X&#x13;�*Dj�&gt;�����)�3�&#x1c;�{�ɽ�Q��T�W���8ݟG�&#xe;�9�&#x2;��,�b���&#x1f;3�&#x1;�&#x12;n�!R&lt;&lt;2&#xf;���M�&#x11;�0=&#x1d;&#x1d;&#x6;��g��ӟd�WV�*�s&#x6;��uɡ����&#x1;4&#x382;},��&#xc;��od�&#x1b;ٙO� �h�#uaUt&#x1e;��Zۦr@���&#x7;b��e�3�vR[w&#x1;&#x1e;z�3��k�&#x0;,yJ��:�&#x19;�Tm�&#x10;n�l�j�m[��&#x3;�Q5R��Ă)f\����5�/Rd��V�Z�6�&#x1f;ǒ�O_�&apos;&#x7f;r&#x15;=(�L�R��C{�8A�Rj&#x17;o�_�&#x1e;�Y�&#x14;����L&#xd;
��&quot;�&#x12;!�&#x18;񹠭&#x8;8��&amp;�f����_�����ʊϯ�݀�����&#x10;@5UYc��gJ&#x1;��&gt;&#x10;Ũ����&apos;���j�p&#x0;+䝗��&#x17;Cn&#x8;6D�W&#x6;�&#xd;&#xd;�G��+�f��&#xd; Zݝ&#x16;0Z��&#x5;ӣWK&#x1d;&#x13;�-�O&#x16;ߖU�u~&#x0;JY�&apos;&#x13;&#x0;�����j��j5�n�~�&amp;Φ�&#x15;�}nע�U���=,��j&#x11;������𡵼&#x1b;]L����?��a0�Kb��S�`Eh{ꆨ1e�݈(�ڂJ��������~�*&#xf;���nۡ&#x7f;&#xd;
���t��K&#x2;�3������&#x3;x��&#x1b;��Ŝ@_����}�&#xe;�&#xb;��&#x8;�&#x1a;&#x13;&#x7f;�&#xd;
n&#x3;?&lt;&#x12;&#x1d;DC&#x10;P͵A��-o���!����~��&#x16;�ߘ?�W�?/k:�,&#x1a;BC&#x8;���~&#x7;&#x1c;�x���^V@&#x1f;��뜬9��W��ĕ��&#x6;�&#x1d;5�&quot;�ꇵ{&#x7f;���6���&apos;0+�y�&#xb;����&amp;%!d&#x14;hJ\�Ԅ.ѐ.����0xXռ�d��h�&#x0;�G��A���V&#x16;)3DO�)&#x70e;_m1_&#x1;�&#x10;n}&#x7f;���&#x5;��b�/��j&#x15;&#x6;7땟S�oA5W(&#x6;�d_��9ec�&#x19;,g�&#xc;p|uF�_&#x1d;�}a�o�pR*=&#x3;&#x1f;���&#x1b;�Շ���4��U�f�^UW��ݢ*�&#x1d;&#x5;6�qX�!&#xc;q�Z&lt;�!&#x8;;&#x7f;Y&#xd;��*��?��ц�&#x10;.n��_��o&#x17;�_&#x1d;�&#x13;�7C3Ⱥ�-?&#x18;WR�&#x4;?&#x6;&#xf;�&#xf;c����~�&#x2;u&gt;?&#x1a;u��G ��9&#x18;��[&#x2;H�&#x2;&#x1c;�{�&#x8;����&#xe;VU��a&#x1a;�=�#���&#x7;&lt;�*&#x5;$&#x15;��-&#x12;b���ބ`&#x1f;��!K)�`��ߎ6&#x588;�&amp;��&#x18;�&#x18;R4�uP]��p�~���V@�zt� ��6�Āoa�.�K�O�d�ܿ��\�&#x17;0S&#x19; �,&#x1c;&#x13;&#x1;��&#x11;�}=��&#x7;��*\&lt;�2J.�p�#&#x14;7:&#x1;?�%Y]��]0�z�*�N��W&#x2;��؇�&#x1b;��D�c����&#x1e;C/&#x14;��&#x7f;̎�ԓŌ�)4kIb��ˡa ��&#x1f;.&#x1f;�U&quot;n���%A���nW륤��&#x4;&#x7f;R���&#x1e;-G���Ń??�,j	&#x11;��&#x5;:��?�c0&gt;��&#x5;��M&#x13;2�&#x4;@LFãZ�$D3-�&#x1e;�ep3=�����!�r��&#x3;�pǃ��D��y9\)&#x1b;��~����դ�)��&#xd;
��h�^&#x1;&lt;�&#x0;e&#x94;q}�W.&#x15;�&#x13;&gt;�86��&#x7;&lt;Q���&#x16;&#x2;�S?������&#x19;�jۉC���&#x10;Sk*���R�\X&#xe;&#x13;��[OW˟&#x10;�&#x1f;�sp�~�����b��M��&#x11;#�&#x1c;��I:��P�&#xd;���{uʔy�&#x14;J��$m�,&#x1a;?ͼ&#x10;���Z�?&#x0;z�&#x8;�a +r&#x4;�0�(&#x1b;�.:��� %;p��|\&quot;&#x1e;&#x12;&#xd;�EVL&#x14;&#x12;�&#x7f;&#x3;������Y��7�;?,&#x11;	�&#x16;y`P:M��n-&#x14;`s&#x7f;Z��&quot;&#x5;&#x6;�dr&quot;�&#x17;�O��]а�]&#x12;�&#x6;&#x10;�&#x4;���	dλ�/�&#x7;U�&#x6;��&#x16;0u#�&#x1;|�:�&gt;b۵	?&#x14;+��={�&quot;��1�R��&#x12;&#xc;X� �&#x16;�r0zF�7�d�j��f��9q��r9&#x18;#ݐ��l�m�X&apos;O��t��H&#x10;�S&quot;&#xf;�ȳ1&#x2;&#x14;�Zes8&#x3;��Khڪ&amp;�@MӴ�ƶ��W���1�Ĉx�E��Q�:�!���9�|�y��TCG[R���N]t��õ�v�VutLɧ��o�b:�̳_�P&#x7;&#x3;�&#xb;X�,`&#x4;n[��:�IS&#x18;�&#x7;�UU{�&#x12;��w�&gt;�&#x10;���2ة�KL�i����&#x1c;&#x1a;`��JN�az�@$^��}��s�ã�&quot;������[d�i&amp;�;fj&#x7;�a�l�}��&#x3;���`���n�*Ev�;&#x7;�X�=j��5l&#xf;pvJ���[�&#x1c;{&#xd;���&#x1c;`x(���E�&#xf;0kW&#x4;`��S6&apos;���&#x1c;0|U!�Ι\�����As=��&#x8;�&#xb;&#x1;�����:Yz��b�t��)���X�(8���O�wg��?���;[�w?��&#x14;&#x1e;&#x6;�ɋ�&#x1b;&#x7f;���ǟ���ֿ�����5���2T��10S&apos;�&#x1b;_S�by&#x1a;�&#x1;0�`��&#x13;�a��v��nxn�&#x3;�^����`:iL&#x0;&#x3;�0[�&#x15;Sa��:��F�G��&#x15;�3�*�����U�j٪W�&lt;[�&#x1d;یy�&#x18;&#x1f;Y�$�2|ӂ�����IU�pV���&#x7f;�gi&#xc;��}�&quot;�&#x8;�~��&#x1b;��-��U��&#x0;в��e��V�gݚ�g��$�h&#x1a;�-���DU����j{ꤪ����ƌ��&#x14;�5�|,wbq��_��d飒��ж &#x1d;������&#x1f;&#x14;&#x5;�=S�]a�7&#x5;�&#x15;��&#x3;M&#x7f;~��&#x17;�:��D&#x17;��&#x13;o2Y̗�&gt;��m�~�`{��CP&#xd;&#x10;�?	�&#x9f;4%b��b���)g���&quot;�y�&#x15;�u��&#x1;�&#xe;o8]�Cߟc-�2�+��y�&#x14;d:f��U�av��e���	L&#x11;`�Y�&#x5;�_g&#xd;
�g�1�֫���&#x0;/�z��?}���&#x3;&#x0;N&#xd;
&#xf;���_=,p�ƃ�a0���&#x1b;�B�p2�U��3�t1�Yx!ʝ���&#x7;�tR&#xd;�q��W����g�e)�&#x7f;2�m��a�&#x19;U�W����Z��^U�b&#x1;Ӎ}�v�&apos;��A�ϔ&#x13;�&#x8;�V�/���,Y�&#x5;?-V�~H&#x17;P���@�ktz��&quot;\���z:==��&#xc;~&#xd;
&#x3;Y�4�g���=�&#xc;��ȷ��.��d�:H�`*���m�����&#x12;�»��(&#xd;&#x7f;�=�&#x11;)V&#x3;��ܛ�;Y�$N&#x1;�b&apos;XNQ&#x19;�����&#xc;s�W��&#x5;�O˕?�F&#xd;
�&#x4;�*@�N�����0I&#x10;3U���&#xc; J�	&#xe;��&#x14;&#x7f;�&#x1a;��&#x6;df&#x0;��I3���{��&#x12;r��$�&lt;s&#x1;�8�%py1���E@y�&#x19;�&apos;tC��&#x19;�b[�R�-�u�&#x4;gLW�.|�$���ӏ��fٿi��ːD�s#1&#xf;�&#x13;�P��y&#x15;�(&#x12;�&#xb;�?&apos;-zm�?&#x12;����?�&#x1;)�d������&#x16;&quot;��y^�#�¤@|����&#x2;r���Pb&#x7f;�o*5�=�el!��2�����}t�s�H&#x1b;o�Z�Wͭ�&#xb;�r�: X�l&#x15;&#xc;&#x1c;&#x15;m���&#xb;ݭ۬n��+�&#x5;�п�&amp;�&#x14;��5v������&#x0;M�	&#x18;��m&#x84;&#x1d;߃y����&#xb;������#&#x1a;B(�&#x2;�Lk�u�&#xe;�&#x19;̷�8�&#x5;Pb �&#x4;s�~ �&#x1;ˠ�&#x13;&#x1f;@J.WMxݰ�@�ю	�@5&#x12;�3���;�����~&#xf;f&#x7b4;����a綶���!�&#x14;�Xw�.$��p1���&#x7f;YO�s�&#xe;&#x5;M�Wb���&#x15;�HI��&#x4;�&#x1c;&#xc;-~&#xd;
�M&#x17;w�&#x13;0b�&#x1a;#��د�k��q	�&#x1e;�$��&#x19;IZ:&#x5;�V&#x6;&#x5;��%&#x5;�b&#xd;
��\�̙�&#x1f;��c8n��p�&#x7f;&#x1b;&#xd;
ⓤ҄o�lݰ�ɸ�&#x19;�-����&#xd;
� z5�s:����&#xd;HV&#x7f;�&#x18;���L�^�A?&#x1b;?$j���~�ǖ�*�fu�&#x15;&#xf;^���{��U�z�g��	r�&#x19;^�x���&#x16;�7�&#x3;�A&#x18;�&#x1e;&#x1e;��eT&#xd;�䔠F&#x7bd;�p�f&#x6;�&#x19;&#x6;&#x5;�)d�A�*xa&gt;I&#x1a;&#x19;�]����u���&#xf;�z���`�&#xc;�:[&gt;b&#x0;����~r`�U&#x8;�G�K&lt;Q|�&#xd;
�&gt;P�&#x1;�hN��&amp;��Jb%]�����K�&#x5;�� r�j&#x14;��&lt;�����x*���a�CEa&quot;Wko���5�j��&amp;����&#x1a;#��&#x8;�}Z����|&#x1d;�}\)�po�Y0}&#x12;&#x1e;�l1A��&amp;l&#x6;��Al��-BS.��&gt;��ΊS5�&#xe;&#x6;&#x2;��&#x0;6_��(���}&#x5;֠���{o�j}�����&#x1b;&#x7f;��&apos;5����j#��,ov�?�&#x1f;�Kn�&#x4;	�&#x10;K%2���x�&#x1e;�x�)�_�&#xd;
�y�UQ&#x1d;�E|C�����[�ߑPJ�b0�&#x17;e���S�&lt;�t8LB���&#x7;��bĆ�&#x17;��ND�&#x1;���L(CCn,N/�����K]��}�3~Yi_��ʠӿj�;&#x15;�r���9N���hix�M0�§R^�`���&#xd;
&#x3;����Eu^w��`ܷ�t韞�E� �����Dn�:&#x7;j&#x3;����_&#x3;\���&#x3;y&#x1e;��7�b�&#x17;�&#x13;L���&#x7f;�&#xc;����{�&#xf;�ˊ�7�Q�۔�b&#x19;&apos;&#x18;&#x5;����t��2&#x1a;���k��1�c&#x8;���E&#x1b;&#x6;Ba�&#x4;w��l&#x12;�&#xc;�&#x2;&#x1f;�&#x12;����&lt;�(�V�掂�\|&lt;��l$&#x1b;Wϸrƌ3&#xd;$n�{&#x14;��r�*â�ݡ�&#x11;�X�e�Ծn�&#x1b;N��&#x7;�w�WZ���#&#x10;S&amp;~�@��&amp;/&#x13;HS�&#xf;�	T���/�&#x10;�_~�&#xb;NR�/����},H��&#x17;ti0�$��&gt;����q2;&#xb;�#&#xf;�6�csl��ϕ�u3����)&#x12;���&#x4;&amp;�&#xf;&#x8;{@�&#x1c;&#x13;�ч��&#x0;�eA�3���X��Y�j�&#x19;&#x5;&#xb;Z��翡n�#&#x16;$&#x4;)��)�`�&#x1d;��&#x12;�z����^tȰ&#x14;�˷���{&#x2;�ȱ,��dQ&#xf;�`G=%^~�{h�-�v�6�&#x3;V&#x13;u&quot;l����ܳ����&#xe;�&#x1;�&#x6;���&gt;z�?&#x11;[�_���Y�sBSk��m&#xb;�y�C�6V�)�&#x7f;���|�&#x1b;7S�&#x18;Ӏ6�ј&#x0;&#xd;
��q&#x2;�Aa&#x5;�e�&#x16;j���&#x16;,?-�a�&#x12;	}�&#xb;&#x3;ݛc�8\&#xb;ˆ�&#x14;�k��&#x1f;{�&#x13;a毀�O����&#x16;t&#xe;��a���&quot;��7�g�V��Bn�X&#x11;���K�)˂K��t&#x15;�ْ�&#x1f;(Ip�V�S���&#x15;$49&#x19;Ƃ&#xd;&quot;��&#x4;&#x13;|�}H=�&#x1;����&#x1c;�0����k���&#x14;h�.�3a)����&#x15;&gt;&gt;x�`����-&#xd;��D7��o+����������xz�-&#x18;4���q+z�Bg��K&lt;A�&quot;&#xc;}&#x16;�w4�bh�&#x1f;�a��&#x15;���x�m�!�1��y���Z���ǚ��0���c���o��&#x3;��f!l&#x1f;���&#x17;KY&#x1a;7r^��#�V�R$&#x14;�&#xb;n�)PG���T�?O�F&#x1c;{p&#x7f;p���&#x13;&#x5f9;&#x5;~��9��o6Fh	���19���&#x13;�&#xd;&#xf;E�m�X�����۷ogw����&#x17;!|&#xc;(.��\&#x6;1�����N��&gt;��O&#xd;
&#x7f;����L��nEF�z(�N��&#x1f;�&#xd;
+�o?-f�������������L����E�R&#x4;�L�Y r��^3��N��&apos;�����������j��&quot;�@��&#x7f;ƥ&#x1;&#x92;M&#x18;�&quot;�&#xd;&#x0;Hnc&#x1d;,GI&#xb;��W�E��7��_)��;���e���J9CCp9^�~/T&#xc;�q��&#x15;\G�.0���K�^�&#x19;�5�ƍ��&#x1c;6C��@�&#x19;�c�&#x19;�ndP&#x88;O&#x1b;���`Y�&#x7f;�&#xd;
�����V&#x15;B&#x7;��+�AV�~��&lt;��&#x19;�Τ&#x2;^}e	&#x1c;&#xd;B�&#x2;��&#x2;��*�&#x15;�q1�+�[x�kr~� Aѥ�&#xe;��5�&#x1;&#xd;
p&#x1b;�ŗ��&lt;&#x17;^�h�2��TD@�7IdDݟ`�Ƨe�R�*5���PS7����d�Sb��	��c85�e�[����z��\&#xd;/��ޓ��˙�&#xd;��L�Jo�9^L��7U�&amp;��&#x6;�o��&apos;�&#x10;&#x1b;}T��]Ue�R&#x5;�&#x6;H#&#x14;60��8�v϶$�ޛ�;�&#x11;&#x12;���j�7;!N%&#xc;����`���&#x15;Q�&#x16;&gt;U0[&#xc;�&#x1;��&#x0;�f&#x1e;&#x1a;	&#x13;P&quot;3���`e�}�+��&#x2;�&#x17;�!��y&#x5;�&apos;�������@��S�&#x1b;*��$:������{�$R��B��&#x1c;�v&#x5;�I�_-+���_��&#x6;�&#x1b;5�T�u8��x��&#x17;��x&#xd;39�&#x8;�|�XF�&amp;AP&#x19;�s}��V�&#x4;]~��l��I�Y�ovV&gt;�����bM���e��G�	/}&#x3;�&#x13;��c�&#x7f;�`�VxZyX�p���ui����&#xb;?b&#x12;^�&#x17;�̄�����DZa�&#x11;��Z!_�2�\�&#x1f;@��&#x15;F�=,�.�;@��0&#x12;,[��{�w�ڢ&#xd;���.�k&#x2;u&#x14;&#x18;&#x13;&#x19;�&#x11;z8\�+48���W&#xd;�Y?&#x5;�텫&#x1b;�~O+�j��#}A�JO&lt;S������Ā~�	&#x1f;=&#x10;y������m��&#xc;2T&#x4;����q�a���2ݒ=�rH��Ȫ���5�W�f�.]�⋿���&#x1e;��&#x1f;����&#x18;�L�&#xc;�QN�0qw&#x17;.��	)�%U��;�&#x5;�X���IF�k`��1f&#x1b;�&#xe;�|w&lt;,�;&#x18;&#x13;��l�p&#xd;�&#x7f;1�HF???�&#x7f;p�*�&#x1d;e&#x1;&#x0;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/submit/telemetry/86d1472c-4d90-451f-a7da-7e65089bc1a2/saved-session/Firefox/59.0/beta/20180209162511?v=4</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Date" elementType="Header">
                    <stringProp name="Header.name">Date</stringProp>
                    <stringProp name="Header.value">Sun, 12 May 2019 15:03:31 GMT</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Content-Encoding" elementType="Header">
                    <stringProp name="Header.name">Content-Encoding</stringProp>
                    <stringProp name="Header.value">gzip</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="29 /ProviderSearch" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="30 /ProviderCourses" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="30 /ProviderCourses" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ProviderCourses</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="31 /CourseSummary" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="CourseId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CourseId</stringProp>
                    <stringProp name="Argument.value">b80274d5-ec64-4120-bae6-30c6b37dc9cd</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CourseRunId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CourseRunId</stringProp>
                    <stringProp name="Argument.value">11875365-3200-4ec4-b49d-afe3261af680</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/CourseSummary</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/ProviderCourses</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32 /EditCourseRun" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="learnAimRef" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">learnAimRef</stringProp>
                    <stringProp name="Argument.value">60333078</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="notionalNVQLevelv2" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">notionalNVQLevelv2</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="awardOrgCode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">awardOrgCode</stringProp>
                    <stringProp name="Argument.value">NCFE</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="learnAimRefTitle" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">learnAimRefTitle</stringProp>
                    <stringProp name="Argument.value">Award%20in%20Interpersonal%20Skills</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="learnAimRefTypeDesc" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">learnAimRefTypeDesc</stringProp>
                    <stringProp name="Argument.value">Award</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="courseId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">courseId</stringProp>
                    <stringProp name="Argument.value">b80274d5-ec64-4120-bae6-30c6b37dc9cd</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="courseRunId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">courseRunId</stringProp>
                    <stringProp name="Argument.value">11875365-3200-4ec4-b49d-afe3261af680</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">mode</stringProp>
                    <stringProp name="Argument.value">Summary</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/EditCourseRun</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/CourseSummary?CourseId=b80274d5-ec64-4120-bae6-30c6b37dc9cd&amp;CourseRunId=11875365-3200-4ec4-b49d-afe3261af680</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="33 /EditCourseRun" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33 /EditCourseRun" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="CourseId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CourseId</stringProp>
                    <stringProp name="Argument.value">b80274d5-ec64-4120-bae6-30c6b37dc9cd</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="CourseRunId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CourseRunId</stringProp>
                    <stringProp name="Argument.value">11875365-3200-4ec4-b49d-afe3261af680</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="QualificationType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">QualificationType</stringProp>
                    <stringProp name="Argument.value">Award</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Mode</stringProp>
                    <stringProp name="Argument.value">Summary</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="CurrentCourseRunDate" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">CurrentCourseRunDate</stringProp>
                    <stringProp name="Argument.value">4/27/2020 12:00:00 AM</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="ValPastDateRef" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ValPastDateRef</stringProp>
                    <stringProp name="Argument.value">4/27/2020 12:00:00 AM</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Mode</stringProp>
                    <stringProp name="Argument.value">Summary</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="LearnAimRefTitle" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">LearnAimRefTitle</stringProp>
                    <stringProp name="Argument.value">Award in Interpersonal Skills</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="NotionalNVQLevelv2" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">NotionalNVQLevelv2</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="AwardOrgCode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">AwardOrgCode</stringProp>
                    <stringProp name="Argument.value">NCFE</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="LearnAimRef" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">LearnAimRef</stringProp>
                    <stringProp name="Argument.value">60333078</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="CourseName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">CourseName</stringProp>
                    <stringProp name="Argument.value">ALL MAX CHARS 1 - edit</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="CourseProviderReference" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">CourseProviderReference</stringProp>
                    <stringProp name="Argument.value">A course for people with no previous experience in counselling training, but who have an interest in counselling or who want to use counselling skills in their work. Practical training in interpersonal and counselling skills, an exploration of professiKKK</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="DeliveryMode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">DeliveryMode</stringProp>
                    <stringProp name="Argument.value">ClassroomBased</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="StartDateType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">StartDateType</stringProp>
                    <stringProp name="Argument.value">SpecifiedStartDate</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Day" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Day</stringProp>
                    <stringProp name="Argument.value">27</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Month" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Month</stringProp>
                    <stringProp name="Argument.value">04</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Year" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Year</stringProp>
                    <stringProp name="Argument.value">2020</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="VenueId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">VenueId</stringProp>
                    <stringProp name="Argument.value">bfa3de18-4b41-4b7e-88e3-28cb9e399991</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Url" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Url</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Cost" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Cost</stringProp>
                    <stringProp name="Argument.value">2000.00</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="CostDescription" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">CostDescription</stringProp>
                    <stringProp name="Argument.value">A course for people with no previous experience in counselling training, but who have an interest in counselling or who want to use counselling skills in their work. Practical training in interpersonal and counselling skills, an exploration of professiKKK</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="DurationLength" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">DurationLength</stringProp>
                    <stringProp name="Argument.value">6</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="DurationUnit" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">DurationUnit</stringProp>
                    <stringProp name="Argument.value">Months</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="StudyMode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">StudyMode</stringProp>
                    <stringProp name="Argument.value">FullTime</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="AttendanceMode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">AttendanceMode</stringProp>
                    <stringProp name="Argument.value">Daytime</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="__RequestVerificationToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">__RequestVerificationToken</stringProp>
                    <stringProp name="Argument.value">CfDJ8AVJBmry2h1MqXWCYUcfL5bcaNVD9YCaZaiCr1MqCQV2rR9AB3fsa7g7KP2gtizr5ldxCQq3HqeIhbVPaxOm89ZsCsATzzheZwKmv-3sgPDZM2LBHEkI8aIC_Si5_nAVDkbHKscZtNWoQRAhZxu9Gz50pJdwVMygZ2eyhe2MMLDLYm7XkBgKQ_DKfgSH5TmI4w</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/EditCourseRun</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/EditCourseRun?learnAimRef=60333078&amp;notionalNVQLevelv2=1&amp;awardOrgCode=NCFE&amp;learnAimRefTitle=Award%20in%20Interpersonal%20Skills&amp;learnAimRefTypeDesc=Award&amp;courseId=b80274d5-ec64-4120-bae6-30c6b37dc9cd&amp;courseRunId=11875365-3200-4ec4-b49d-afe3261af680&amp;mode=Summary</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34 /ProviderCourses" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="NotificationTitle" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">NotificationTitle</stringProp>
                    <stringProp name="Argument.value">Course edited</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="NotificationMessage" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">NotificationMessage</stringProp>
                    <stringProp name="Argument.value">You edited</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="courseRunId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">courseRunId</stringProp>
                    <stringProp name="Argument.value">11875365-3200-4ec4-b49d-afe3261af680</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/ProviderCourses</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/EditCourseRun?learnAimRef=60333078&amp;notionalNVQLevelv2=1&amp;awardOrgCode=NCFE&amp;learnAimRefTitle=Award%20in%20Interpersonal%20Skills&amp;learnAimRefTypeDesc=Award&amp;courseId=b80274d5-ec64-4120-bae6-30c6b37dc9cd&amp;courseRunId=11875365-3200-4ec4-b49d-afe3261af680&amp;mode=Summary</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="35 /CourseSummary" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="CourseId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CourseId</stringProp>
                    <stringProp name="Argument.value">b80274d5-ec64-4120-bae6-30c6b37dc9cd</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="CourseRunId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CourseRunId</stringProp>
                    <stringProp name="Argument.value">11875365-3200-4ec4-b49d-afe3261af680</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/CourseSummary</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/ProviderCourses?NotificationTitle=Course%20edited&amp;NotificationMessage=You%20edited&amp;courseRunId=11875365-3200-4ec4-b49d-afe3261af680</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="36 /CopyCourseRun" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="learnAimRef" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">learnAimRef</stringProp>
                    <stringProp name="Argument.value">60333078</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="notionalNVQLevelv2" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">notionalNVQLevelv2</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="awardOrgCode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">awardOrgCode</stringProp>
                    <stringProp name="Argument.value">NCFE</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="learnAimRefTitle" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">learnAimRefTitle</stringProp>
                    <stringProp name="Argument.value">Award%20in%20Interpersonal%20Skills</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="learnAimRefTypeDesc" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">learnAimRefTypeDesc</stringProp>
                    <stringProp name="Argument.value">Award</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="courseId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">courseId</stringProp>
                    <stringProp name="Argument.value">b80274d5-ec64-4120-bae6-30c6b37dc9cd</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="courseRunId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">courseRunId</stringProp>
                    <stringProp name="Argument.value">11875365-3200-4ec4-b49d-afe3261af680</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="publishMode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">publishMode</stringProp>
                    <stringProp name="Argument.value">Summary</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/CopyCourseRun</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/CourseSummary?CourseId=b80274d5-ec64-4120-bae6-30c6b37dc9cd&amp;CourseRunId=11875365-3200-4ec4-b49d-afe3261af680</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="37 /CopyCourseRun" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="37 /CopyCourseRun" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="CourseId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CourseId</stringProp>
                    <stringProp name="Argument.value">b80274d5-ec64-4120-bae6-30c6b37dc9cd</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CourseRunId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CourseRunId</stringProp>
                    <stringProp name="Argument.value">11875365-3200-4ec4-b49d-afe3261af680</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="QualificationType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">QualificationType</stringProp>
                    <stringProp name="Argument.value">Award</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="LearnAimRefTitle" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">LearnAimRefTitle</stringProp>
                    <stringProp name="Argument.value">Award in Interpersonal Skills</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="NotionalNVQLevelv2" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">NotionalNVQLevelv2</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="AwardOrgCode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">AwardOrgCode</stringProp>
                    <stringProp name="Argument.value">NCFE</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="LearnAimRef" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">LearnAimRef</stringProp>
                    <stringProp name="Argument.value">60333078</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CourseName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">CourseName</stringProp>
                    <stringProp name="Argument.value">ALL MAX CHARS 1 - copy</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CourseProviderReference" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">CourseProviderReference</stringProp>
                    <stringProp name="Argument.value">A course for people with no previous experience in counselling training, but who have an interest in counselling or who want to use counselling skills in their work. Practical training in interpersonal and counselling skills, an exploration of professiKKK</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="DeliveryMode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">DeliveryMode</stringProp>
                    <stringProp name="Argument.value">ClassroomBased</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="StartDateType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">StartDateType</stringProp>
                    <stringProp name="Argument.value">SpecifiedStartDate</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Day" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Day</stringProp>
                    <stringProp name="Argument.value">27</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Month" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Month</stringProp>
                    <stringProp name="Argument.value">04</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Year" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Year</stringProp>
                    <stringProp name="Argument.value">2020</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="VenueId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">VenueId</stringProp>
                    <stringProp name="Argument.value">bfa3de18-4b41-4b7e-88e3-28cb9e399991</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Url" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Url</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Cost" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Cost</stringProp>
                    <stringProp name="Argument.value">2000.00</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CostDescription" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">CostDescription</stringProp>
                    <stringProp name="Argument.value">A course for people with no previous experience in counselling training, but who have an interest in counselling or who want to use counselling skills in their work. Practical training in interpersonal and counselling skills, an exploration of professiKKK</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="DurationLength" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">DurationLength</stringProp>
                    <stringProp name="Argument.value">6</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="DurationUnit" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">DurationUnit</stringProp>
                    <stringProp name="Argument.value">Months</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="StudyMode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">StudyMode</stringProp>
                    <stringProp name="Argument.value">FullTime</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="AttendanceMode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">AttendanceMode</stringProp>
                    <stringProp name="Argument.value">Daytime</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="__RequestVerificationToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">__RequestVerificationToken</stringProp>
                    <stringProp name="Argument.value">CfDJ8AVJBmry2h1MqXWCYUcfL5Z-7cQluDrvmdDBgbeXYUhg1mlWQzN4J5fOpmABLuq8G2n9gneg4lnW9Syrbww-GPBGetV1Xj7RR5uMjL-pvZGsEtpU-bD2MCNLe-ggM5ZfLycpKKkWEIqgjCjrBWJv36G6grYVtQeVQVq9Q7VNEVG9j_o7l_RGuXvAtIW42gB7KA</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/CopyCourseRun</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/CopyCourseRun?learnAimRef=60333078&amp;notionalNVQLevelv2=1&amp;awardOrgCode=NCFE&amp;learnAimRefTitle=Award%20in%20Interpersonal%20Skills&amp;learnAimRefTypeDesc=Award&amp;courseId=b80274d5-ec64-4120-bae6-30c6b37dc9cd&amp;courseRunId=11875365-3200-4ec4-b49d-afe3261af680&amp;publishMode=Summary</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="38 /ProviderCourses" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="notificationTitle" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">notificationTitle</stringProp>
                    <stringProp name="Argument.value">New course added</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="notificationMessage" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">notificationMessage</stringProp>
                    <stringProp name="Argument.value">You added</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="courseRunId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">courseRunId</stringProp>
                    <stringProp name="Argument.value">86947e06-6919-48f8-8da3-920451e3ba31</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/ProviderCourses</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/CopyCourseRun?learnAimRef=60333078&amp;notionalNVQLevelv2=1&amp;awardOrgCode=NCFE&amp;learnAimRefTitle=Award%20in%20Interpersonal%20Skills&amp;learnAimRefTypeDesc=Award&amp;courseId=b80274d5-ec64-4120-bae6-30c6b37dc9cd&amp;courseRunId=11875365-3200-4ec4-b49d-afe3261af680&amp;publishMode=Summary</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="39 /ProviderCourses/FilterCourses" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="39 /ProviderCourses/FilterCourses" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Keyword" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Keyword</stringProp>
                    <stringProp name="Argument.value">math</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ProviderCourses/FilterCourses</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/ProviderCourses?notificationTitle=New%20course%20added&amp;notificationMessage=You%20added&amp;courseRunId=86947e06-6919-48f8-8da3-920451e3ba31</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="40 /ProviderCourses/FilterCourses" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Keyword" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Keyword</stringProp>
                    <stringProp name="Argument.value">math</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ProviderCourses/FilterCourses</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/ProviderCourses?notificationTitle=New%20course%20added&amp;notificationMessage=You%20added&amp;courseRunId=86947e06-6919-48f8-8da3-920451e3ba31</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="41 /ProviderCourses/FilterCourses" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Keyword" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Keyword</stringProp>
                    <stringProp name="Argument.value">maths</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ProviderCourses/FilterCourses</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/ProviderCourses?notificationTitle=New%20course%20added&amp;notificationMessage=You%20added&amp;courseRunId=86947e06-6919-48f8-8da3-920451e3ba31</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="42 /ProviderCourses/FilterCourses" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Keyword" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Keyword</stringProp>
                    <stringProp name="Argument.value">math</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/ProviderCourses/FilterCourses</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/ProviderCourses?notificationTitle=New%20course%20added&amp;notificationMessage=You%20added&amp;courseRunId=86947e06-6919-48f8-8da3-920451e3ba31</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="43 /ProviderCourses/FilterCourses" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Keyword" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Keyword</stringProp>
                    <stringProp name="Argument.value">mat</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/ProviderCourses/FilterCourses</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/ProviderCourses?notificationTitle=New%20course%20added&amp;notificationMessage=You%20added&amp;courseRunId=86947e06-6919-48f8-8da3-920451e3ba31</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="44 /ProviderCourses/FilterCourses" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Keyword" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Keyword</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/ProviderCourses/FilterCourses</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/ProviderCourses?notificationTitle=New%20course%20added&amp;notificationMessage=You%20added&amp;courseRunId=86947e06-6919-48f8-8da3-920451e3ba31</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="45 /ProviderCourses/FilterCourses" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Keyword" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Keyword</stringProp>
                    <stringProp name="Argument.value">mat</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/ProviderCourses/FilterCourses</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/ProviderCourses?notificationTitle=New%20course%20added&amp;notificationMessage=You%20added&amp;courseRunId=86947e06-6919-48f8-8da3-920451e3ba31</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="46 /ProviderCourses/FilterCourses" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Keyword" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Keyword</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/ProviderCourses/FilterCourses</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/ProviderCourses?notificationTitle=New%20course%20added&amp;notificationMessage=You%20added&amp;courseRunId=86947e06-6919-48f8-8da3-920451e3ba31</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="47 /ProviderCourses/FilterCourses" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="47 /ProviderCourses/FilterCourses" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Keyword" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Keyword</stringProp>
                    <stringProp name="Argument.value">max</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/ProviderCourses/FilterCourses</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/ProviderCourses?notificationTitle=New%20course%20added&amp;notificationMessage=You%20added&amp;courseRunId=86947e06-6919-48f8-8da3-920451e3ba31</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="48 /ProviderCourses/FilterCourses" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="48 /ProviderCourses/FilterCourses" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Keyword" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Keyword</stringProp>
                    <stringProp name="Argument.value">max</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/ProviderCourses/FilterCourses</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/ProviderCourses?notificationTitle=New%20course%20added&amp;notificationMessage=You%20added&amp;courseRunId=86947e06-6919-48f8-8da3-920451e3ba31</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="49 /ProviderCourses/FilterCourses" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Keyword" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Keyword</stringProp>
                    <stringProp name="Argument.value">max</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/ProviderCourses/FilterCourses</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/ProviderCourses?notificationTitle=New%20course%20added&amp;notificationMessage=You%20added&amp;courseRunId=86947e06-6919-48f8-8da3-920451e3ba31</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="50 /ProviderCourses/FilterCourses" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="50 /ProviderCourses/FilterCourses" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Keyword" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Keyword</stringProp>
                    <stringProp name="Argument.value">max</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="AttendancePatternFilter" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">AttendancePatternFilter</stringProp>
                    <stringProp name="Argument.value">Daytime</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/ProviderCourses/FilterCourses</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/ProviderCourses?notificationTitle=New%20course%20added&amp;notificationMessage=You%20added&amp;courseRunId=86947e06-6919-48f8-8da3-920451e3ba31</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="51 /ProviderCourses/FilterCourses" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Keyword" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Keyword</stringProp>
                    <stringProp name="Argument.value">max</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/ProviderCourses/FilterCourses</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/ProviderCourses?notificationTitle=New%20course%20added&amp;notificationMessage=You%20added&amp;courseRunId=86947e06-6919-48f8-8da3-920451e3ba31</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="52 /Venues" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/Venues</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/ProviderCourses?notificationTitle=New%20course%20added&amp;notificationMessage=You%20added&amp;courseRunId=86947e06-6919-48f8-8da3-920451e3ba31</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="53 /Venues/AddVenue" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/Venues/AddVenue</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/Venues</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="54 /PostcodeLookup" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="55 /Venues/VenueAddressSelectionConfirmation" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="VenueName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">VenueName</stringProp>
                    <stringProp name="Argument.value">test2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="PostcodeId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">PostcodeId</stringProp>
                    <stringProp name="Argument.value">GB%7CRM%7CA%7C410839</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="__RequestVerificationToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">__RequestVerificationToken</stringProp>
                    <stringProp name="Argument.value">CfDJ8AVJBmry2h1MqXWCYUcfL5a9xwOe1oXlnxkeONekIeIv36wsJzs7hAsGVI0n2aqh3xgICN_q-aX7aMvaAt3TUTgksD8bg-350bvMJoTbe36l17sr3l9caA076WKSasv9IjIC7L2eq40ugaXB8O0syaDYmeH1Zi8xmodcDDfaV42dtOQCcmSIoHP6Ggr2PqT5EQ</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/Venues/VenueAddressSelectionConfirmation</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/Venues/AddVenue</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="57 /venues/EditVenue/b10b485b-8b15-4bbb-a443-6946ad4a9838" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="57 /venues/EditVenue/b10b485b-8b15-4bbb-a443-6946ad4a9838" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/venues/EditVenue/b10b485b-8b15-4bbb-a443-6946ad4a9838</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/Venues/AddVenueSelectionConfirmation</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="58 /venues/EditVenueName" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Id</stringProp>
                    <stringProp name="Argument.value">b10b485b-8b15-4bbb-a443-6946ad4a9838</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Address" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Address</stringProp>
                    <stringProp name="Argument.value">Dfc.CourseDirectory.Web.ViewComponents.Shared.AddressModel</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Address.Id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Address.Id</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Address.AddressLine1" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Address.AddressLine1</stringProp>
                    <stringProp name="Argument.value">Flat+5</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Address.AddressLine2" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Address.AddressLine2</stringProp>
                    <stringProp name="Argument.value">129+Sandford+Road</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Address.TownOrCity" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Address.TownOrCity</stringProp>
                    <stringProp name="Argument.value">Birmingham</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Address.County" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Address.County</stringProp>
                    <stringProp name="Argument.value">West+Midlands</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Address.Postcode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Address.Postcode</stringProp>
                    <stringProp name="Argument.value">B13+9DA</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="VenueName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">VenueName</stringProp>
                    <stringProp name="Argument.value">test2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="AddressLine1" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">AddressLine1</stringProp>
                    <stringProp name="Argument.value">Flat+5</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="AddressLine2" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">AddressLine2</stringProp>
                    <stringProp name="Argument.value">129+Sandford+Road</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="TownOrCity" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">TownOrCity</stringProp>
                    <stringProp name="Argument.value">Birmingham</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="County" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">County</stringProp>
                    <stringProp name="Argument.value">West+Midlands</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Postcode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Postcode</stringProp>
                    <stringProp name="Argument.value">B13+9DA</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="__RequestVerificationToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">__RequestVerificationToken</stringProp>
                    <stringProp name="Argument.value">CfDJ8AVJBmry2h1MqXWCYUcfL5bGn3t5Jz8d2qMPyrZV5IMunM2oX8wWdMZ22R6q3m1bLWnR1RMUAnfVetuICXr639w7aRsYTXkos0m-U936Y8cSh_xMrDT366QD3K3Kzcr3ORmJsD8Chzlm2QML3Nz6PuJnTNw-HeFILGfvi0ZnFe5EqUFZHSSmhSbVjKh-3bEcBA</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/venues/EditVenueName</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/venues/EditVenue/b10b485b-8b15-4bbb-a443-6946ad4a9838</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="59 /venues/VenueAddressSelectionConfirmation" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Address" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Address</stringProp>
                    <stringProp name="Argument.value">Dfc.CourseDirectory.Web.ViewComponents.Shared.AddressModel</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="PostcodeId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">PostcodeId</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Id</stringProp>
                    <stringProp name="Argument.value">b10b485b-8b15-4bbb-a443-6946ad4a9838</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="VenueName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">VenueName</stringProp>
                    <stringProp name="Argument.value">test3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="__RequestVerificationToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">__RequestVerificationToken</stringProp>
                    <stringProp name="Argument.value">CfDJ8AVJBmry2h1MqXWCYUcfL5a5UwXzVrz1m8PBGOgImpp84p7RJaw48iZ_4FrndJY9dNU7o97RwQTOtDTtmmYJrzd8GmzYT2h3NNKGmtrkXkcw7RKi2arzQ-dAGIrM3QYtpA3l9bqje6kNFEIfmfJBPaSZ__EpA7aBXaZW3ywJdBKhODA5FwIsMuI49Zivbz8LRQ</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/venues/VenueAddressSelectionConfirmation</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/venues/EditVenueName</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="60 /venues/AddVenueSelectionConfirmation" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Id</stringProp>
                    <stringProp name="Argument.value">b10b485b-8b15-4bbb-a443-6946ad4a9838</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Address" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Address</stringProp>
                    <stringProp name="Argument.value">Dfc.CourseDirectory.Web.ViewComponents.Shared.AddressModel</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Address.Id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Address.Id</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Address.AddressLine1" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Address.AddressLine1</stringProp>
                    <stringProp name="Argument.value">Flat+5</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Address.AddressLine2" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Address.AddressLine2</stringProp>
                    <stringProp name="Argument.value">129+Sandford+Road</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Address.TownOrCity" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Address.TownOrCity</stringProp>
                    <stringProp name="Argument.value">Birmingham</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Address.County" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Address.County</stringProp>
                    <stringProp name="Argument.value">West+Midlands</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Address.Postcode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Address.Postcode</stringProp>
                    <stringProp name="Argument.value">B13+9DA</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="VenueName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">VenueName</stringProp>
                    <stringProp name="Argument.value">test3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="AddressLine1" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">AddressLine1</stringProp>
                    <stringProp name="Argument.value">Flat+5</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="AddressLine2" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">AddressLine2</stringProp>
                    <stringProp name="Argument.value">129+Sandford+Road</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="TownOrCity" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">TownOrCity</stringProp>
                    <stringProp name="Argument.value">Birmingham</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="County" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">County</stringProp>
                    <stringProp name="Argument.value">West+Midlands</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Postcode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Postcode</stringProp>
                    <stringProp name="Argument.value">B13+9DA</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="__RequestVerificationToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">__RequestVerificationToken</stringProp>
                    <stringProp name="Argument.value">CfDJ8AVJBmry2h1MqXWCYUcfL5bo8C6-dL3TXrOlr9ztr2I4WcmRbYMUYAV5XfEcSEcVxxQ4V7Qnn2hMvDbegtz891CylIRAR3G5fwddExdS0QL799PwM2xVE_F7GaWJi0rej6bbVVpnxa2j-SrgJfXPMuIoFpWJIBwdZNRryzvX8dx2TEeYLy7TsPGzPEdf7oe7EA</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/venues/AddVenueSelectionConfirmation</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/venues/VenueAddressSelectionConfirmation</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="61 /RegulatedQualification" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="61 /RegulatedQualification" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/RegulatedQualification</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/venues/AddVenueSelectionConfirmation</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="62 /RegulatedQualification/RegulatedTypeSelected" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="RegulatedType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">RegulatedType</stringProp>
                    <stringProp name="Argument.value">Regulated</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="__RequestVerificationToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">__RequestVerificationToken</stringProp>
                    <stringProp name="Argument.value">CfDJ8AVJBmry2h1MqXWCYUcfL5bomrkBSAKqENmhnGqrXfNlnk3fANYqu8rTHP0buQzvUPiL-5Kcwo2URRgt5T1j7KOlHxgy9cQl-f2YIiGTdZfexjdVIJHSvyCex3cQfARHBd1by4S9I0zMYcpaeVezmYvzTdDygoVin9EHFJVNFky8Rwlg_sPLMFC4SHTmGhMPlg</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/RegulatedQualification/RegulatedTypeSelected</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/RegulatedQualification</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="63 /Qualifications" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/Qualifications</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/RegulatedQualification</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="67 /AddCourse/AddCourse" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="67 /AddCourse/AddCourse" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="learnAimRef" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">learnAimRef</stringProp>
                    <stringProp name="Argument.value">F5063456</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="notionalNVQLevelv2" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">notionalNVQLevelv2</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="awardOrgCode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">awardOrgCode</stringProp>
                    <stringProp name="Argument.value">MULTI</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="learnAimRefTitle" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">learnAimRefTitle</stringProp>
                    <stringProp name="Argument.value">Biology%20-%20Human%20Reproduction</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="learnAimRefTypeDesc" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">learnAimRefTypeDesc</stringProp>
                    <stringProp name="Argument.value">QCF%20Units</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/AddCourse/AddCourse</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/Qualifications</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="68 /AddCourse/AddCourse" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="68 /AddCourse/AddCourse" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="AwardOrgCode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">AwardOrgCode</stringProp>
                    <stringProp name="Argument.value">MULTI</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="LearnAimRef" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">LearnAimRef</stringProp>
                    <stringProp name="Argument.value">F5063456</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="LearnAimRefTitle" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">LearnAimRefTitle</stringProp>
                    <stringProp name="Argument.value">Biology - Human Reproduction</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="NotionalNVQLevelv2" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">NotionalNVQLevelv2</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="courseMode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">courseMode</stringProp>
                    <stringProp name="Argument.value">Add</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CourseId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CourseId</stringProp>
                    <stringProp name="Argument.value">00000000-0000-0000-0000-000000000000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CourseFor" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CourseFor</stringProp>
                    <stringProp name="Argument.value">testing</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="EntryRequirements" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">EntryRequirements</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="WhatWillLearn" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">WhatWillLearn</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="HowYouWillLearn" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">HowYouWillLearn</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="WhatYouNeed" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">WhatYouNeed</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="HowAssessed" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">HowAssessed</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="WhereNext" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">WhereNext</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="__RequestVerificationToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">__RequestVerificationToken</stringProp>
                    <stringProp name="Argument.value">CfDJ8AVJBmry2h1MqXWCYUcfL5bDVRtU0hYJi4vEkECe6f7BKwMoWqq78m4a9p2Qrm47bhfIWHQzUycFJx0IKpg2q-h8YiR7sJYTiL3n24jGRDwKzwBJTjLXqlNv1RhHIbt7y0VeN_oNFRdbR63ndMyLBFpQ-FVGEMHPC0ZGM5OPTEOUupimiKT9MVy5pDq4qCymqA</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/AddCourse/AddCourse</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/AddCourse/AddCourse?learnAimRef=F5063456&amp;notionalNVQLevelv2=1&amp;awardOrgCode=MULTI&amp;learnAimRefTitle=Biology%20-%20Human%20Reproduction&amp;learnAimRefTypeDesc=QCF%20Units</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="69 /AddCourse/AddCourseRun" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="69 /AddCourse/AddCourseRun" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="CourseMode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CourseMode</stringProp>
                    <stringProp name="Argument.value">Add</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CourseId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CourseId</stringProp>
                    <stringProp name="Argument.value">00000000-0000-0000-0000-000000000000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CourseRunId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CourseRunId</stringProp>
                    <stringProp name="Argument.value">00000000-0000-0000-0000-000000000000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CourseName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CourseName</stringProp>
                    <stringProp name="Argument.value">Biology+-+Human+Reproduction</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CourseProviderReference" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CourseProviderReference</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="DeliveryMode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">DeliveryMode</stringProp>
                    <stringProp name="Argument.value">ClassroomBased</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Day" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Day</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Month" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Month</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Year" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Year</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="StartDateType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">StartDateType</stringProp>
                    <stringProp name="Argument.value">FlexibleStartDate</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="SelectedVenues" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">SelectedVenues</stringProp>
                    <stringProp name="Argument.value">bfa3de18-4b41-4b7e-88e3-28cb9e399991</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Url" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Url</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Cost" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Cost</stringProp>
                    <stringProp name="Argument.value">123.00</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CostDescription" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CostDescription</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="DurationLength" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">DurationLength</stringProp>
                    <stringProp name="Argument.value">12</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="DurationUnit" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">DurationUnit</stringProp>
                    <stringProp name="Argument.value">Months</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="StudyMode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">StudyMode</stringProp>
                    <stringProp name="Argument.value">Flexible</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="AttendanceMode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">AttendanceMode</stringProp>
                    <stringProp name="Argument.value">Evening</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="__RequestVerificationToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">__RequestVerificationToken</stringProp>
                    <stringProp name="Argument.value">CfDJ8AVJBmry2h1MqXWCYUcfL5amVEgR0KFloK9atx7sHCxkFPyStqg2j9iNZ-ldVzkxXGVnQ8W_7dTMG1ir3WOKdtIs5C6S_TyP69kdvCz-RwJEzKbvHM8lgKZUSkUhJWgmIbyqT8cxbWrHk4N6hQ7Zvy9Xg-shclqLc2ODb_rB74SjSyERAYlJbsKq8Oa7-WUcBQ</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/AddCourse/AddCourseRun</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/AddCourse/AddCourse</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="70 /AddCourse/AcceptAndPublish" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="submitButton" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">submitButton</stringProp>
                    <stringProp name="Argument.value">publish</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="__RequestVerificationToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">__RequestVerificationToken</stringProp>
                    <stringProp name="Argument.value">CfDJ8AVJBmry2h1MqXWCYUcfL5bza_5VH76WVDqcmL3H7mO73L8l5QTYi2f6EMeTjiuvom6QoojrdZLPAGvV41m0v6X0mvYrco1334PHy_-InMkG8-3yg7dKsDHHPmhEzS99ZJui_Obe9yAZ2u5z3ROYFNUK7CsVBbguZnk66zZhprWuH768BfbEiD4MK7kWP3uYkg</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/AddCourse/AcceptAndPublish</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/AddCourse/AddCourseRun</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="71 /ProviderCourses" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="CourseRunId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CourseRunId</stringProp>
                    <stringProp name="Argument.value">8954cb0e-492b-4c3b-8100-c80df7892bcf</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="NotificationTitle" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">NotificationTitle</stringProp>
                    <stringProp name="Argument.value">Course added</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="NotificationMessage" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">NotificationMessage</stringProp>
                    <stringProp name="Argument.value">You added</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/ProviderCourses</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/AddCourse/AddCourseRun</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="74 /Auth/Logout" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="74 /Auth/Logout" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/Auth/Logout</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/Provider</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="75 /session/end" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="post_logout_redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">post_logout_redirect_uri</stringProp>
                    <stringProp name="Argument.value">https%3A%2F%2Fsit-coursedirectory.nationalcareersservice.org.uk%2Fsignout%2Fcomplete</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="id_token_hint" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">id_token_hint</stringProp>
                    <stringProp name="Argument.value">eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ikt2VGdlamw4U05aLXpWeXJmckRkV1BZM3pJSHJkWlpYVG5WU1NqWTgta00ifQ.eyJzdWIiOiIzRkY5NEI3RC1GQTk0LTRCMjYtOTFBQy02ODE1NjQwMDdBQjUiLCJlbWFpbCI6ImthZGlyLm1hbGlrQGNvbnRyYWN0c29ubGluZS5vcmciLCJnaXZlbl9uYW1lIjoiS2FkaXIiLCJmYW1pbHlfbmFtZSI6Ik1hbGlrIiwibm9uY2UiOiI2MzY5MzI3MDIwMzczNDQ3MDMuWVdJME9EaGhNMk10WVRnNE15MDBNakJqTFdFd05qSXRNbUprTURReVpqVXpaVEZtT1RJM1ltTTROemN0T1dZd01TMDBaV0U1TFRrNE1UZ3RNak5sWW1ZM1pUTXhORGd3IiwiYXRfaGFzaCI6IklTNVN4c1o3Z1B4blAyb0ZFYXNSdlEiLCJydF9oYXNoIjoic1E3MFNaYWVTY01VZnhmMlhEZEVVdyIsImF1ZCI6IkNvdXJzZURpcmVjdG9yeSIsImV4cCI6MTU1NzY3NzAxMCwiaWF0IjoxNTU3NjczNDEwLCJpc3MiOiJodHRwczovL3NpZ25pbi10ZXN0LW9pZGMtYXMuYXp1cmV3ZWJzaXRlcy5uZXQ6NDQzIn0.LgmgcMdsC4khuHs0xYJihcljLm0CPISRK3JU-JSds_HyP6wPEa7F5ci6JnMUo_G4_jVT-fO7omxbcQfvsQ2Gh2u8noy8KX1y9aHBnvRlT9h690iREyiQyNk1anXDisgZwPY7A696xA9J5l6vgCsDFYUZy4XCrGGJPsWHSQW87C7s7fvWbKAZcYwHqvpNz4ueOFwvv4mcjd1vz0Zy4tBBMYXI7W6eKdKoNUuHrKQfcfLNwZdYh0Xk0OkSbZyeIXKwJ0HhYs3xmFuJRh5pDZbj2VLdbD_rzo1d3XWLbZJcNgc6Bk4uHLCrymBMZjKnhLXhl07gv2X-X2cbJvN-NR2Vhw</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">CfDJ8AVJBmry2h1MqXWCYUcfL5ZPF8Ejzmx3KTu0Ap2eAYHn2U3oiw2_e5uOx-OYS_ay97LT3xpJw4H-t2TICpmtNblP3rrWNPUqB8nlwW86myCWW02QwQdWIECZBKLyNt4e6Lv9yB1nzCQKGhsG3bNbVR8QsEWwtqsdkCh_wHNJcLNyAGjN4wQc0qYt5ISXs15C2rX_Ma2cIjo3F9X975mhILc</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">signin-test-oidc-as.azurewebsites.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/session/end</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/Provider</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="78 /session/end" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="xsrf" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">xsrf</stringProp>
                    <stringProp name="Argument.value">50e7ea4a25eca48705d0c3847281cb49c8355bc7c191f29f</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="logout" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">logout</stringProp>
                    <stringProp name="Argument.value">yes</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">signin-test-oidc-as.azurewebsites.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/session/end</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://signin-test-oidc-as.azurewebsites.net/session/end?post_logout_redirect_uri=https%3A%2F%2Fsit-coursedirectory.nationalcareersservice.org.uk%2Fsignout%2Fcomplete&amp;id_token_hint=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ikt2VGdlamw4U05aLXpWeXJmckRkV1BZM3pJSHJkWlpYVG5WU1NqWTgta00ifQ.eyJzdWIiOiIzRkY5NEI3RC1GQTk0LTRCMjYtOTFBQy02ODE1NjQwMDdBQjUiLCJlbWFpbCI6ImthZGlyLm1hbGlrQGNvbnRyYWN0c29ubGluZS5vcmciLCJnaXZlbl9uYW1lIjoiS2FkaXIiLCJmYW1pbHlfbmFtZSI6Ik1hbGlrIiwibm9uY2UiOiI2MzY5MzI3MDIwMzczNDQ3MDMuWVdJME9EaGhNMk10WVRnNE15MDBNakJqTFdFd05qSXRNbUprTURReVpqVXpaVEZtT1RJM1ltTTROemN0T1dZd01TMDBaV0U1TFRrNE1UZ3RNak5sWW1ZM1pUTXhORGd3IiwiYXRfaGFzaCI6IklTNVN4c1o3Z1B4blAyb0ZFYXNSdlEiLCJydF9oYXNoIjoic1E3MFNaYWVTY01VZnhmMlhEZEVVdyIsImF1ZCI6IkNvdXJzZURpcmVjdG9yeSIsImV4cCI6MTU1NzY3NzAxMCwiaWF0IjoxNTU3NjczNDEwLCJpc3MiOiJodHRwczovL3NpZ25pbi10ZXN0LW9pZGMtYXMuYXp1cmV3ZWJzaXRlcy5uZXQ6NDQzIn0.LgmgcMdsC4khuHs0xYJihcljLm0CPISRK3JU-JSds_HyP6wPEa7F5ci6JnMUo_G4_jVT-fO7omxbcQfvsQ2Gh2u8noy8KX1y9aHBnvRlT9h690iREyiQyNk1anXDisgZwPY7A696xA9J5l6vgCsDFYUZy4XCrGGJPsWHSQW87C7s7fvWbKAZcYwHqvpNz4ueOFwvv4mcjd1vz0Zy4tBBMYXI7W6eKdKoNUuHrKQfcfLNwZdYh0Xk0OkSbZyeIXKwJ0HhYs3xmFuJRh5pDZbj2VLdbD_rzo1d3XWLbZJcNgc6Bk4uHLCrymBMZjKnhLXhl07gv2X-X2cbJvN-NR2Vhw&amp;state=CfDJ8AVJBmry2h1MqXWCYUcfL5ZPF8Ejzmx3KTu0Ap2eAYHn2U3oiw2_e5uOx-OYS_ay97LT3xpJw4H-t2TICpmtNblP3rrWNPUqB8nlwW86myCWW02QwQdWIECZBKLyNt4e6Lv9yB1nzCQKGhsG3bNbVR8QsEWwtqsdkCh_wHNJcLNyAGjN4wQc0qYt5ISXs15C2rX_Ma2cIjo3F9X975mhILc</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="80 /signout/complete" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">CfDJ8AVJBmry2h1MqXWCYUcfL5ZPF8Ejzmx3KTu0Ap2eAYHn2U3oiw2_e5uOx-OYS_ay97LT3xpJw4H-t2TICpmtNblP3rrWNPUqB8nlwW86myCWW02QwQdWIECZBKLyNt4e6Lv9yB1nzCQKGhsG3bNbVR8QsEWwtqsdkCh_wHNJcLNyAGjN4wQc0qYt5ISXs15C2rX_Ma2cIjo3F9X975mhILc</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/signout/complete</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://signin-test-oidc-as.azurewebsites.net/session/end?post_logout_redirect_uri=https%3A%2F%2Fsit-coursedirectory.nationalcareersservice.org.uk%2Fsignout%2Fcomplete&amp;id_token_hint=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ikt2VGdlamw4U05aLXpWeXJmckRkV1BZM3pJSHJkWlpYVG5WU1NqWTgta00ifQ.eyJzdWIiOiIzRkY5NEI3RC1GQTk0LTRCMjYtOTFBQy02ODE1NjQwMDdBQjUiLCJlbWFpbCI6ImthZGlyLm1hbGlrQGNvbnRyYWN0c29ubGluZS5vcmciLCJnaXZlbl9uYW1lIjoiS2FkaXIiLCJmYW1pbHlfbmFtZSI6Ik1hbGlrIiwibm9uY2UiOiI2MzY5MzI3MDIwMzczNDQ3MDMuWVdJME9EaGhNMk10WVRnNE15MDBNakJqTFdFd05qSXRNbUprTURReVpqVXpaVEZtT1RJM1ltTTROemN0T1dZd01TMDBaV0U1TFRrNE1UZ3RNak5sWW1ZM1pUTXhORGd3IiwiYXRfaGFzaCI6IklTNVN4c1o3Z1B4blAyb0ZFYXNSdlEiLCJydF9oYXNoIjoic1E3MFNaYWVTY01VZnhmMlhEZEVVdyIsImF1ZCI6IkNvdXJzZURpcmVjdG9yeSIsImV4cCI6MTU1NzY3NzAxMCwiaWF0IjoxNTU3NjczNDEwLCJpc3MiOiJodHRwczovL3NpZ25pbi10ZXN0LW9pZGMtYXMuYXp1cmV3ZWJzaXRlcy5uZXQ6NDQzIn0.LgmgcMdsC4khuHs0xYJihcljLm0CPISRK3JU-JSds_HyP6wPEa7F5ci6JnMUo_G4_jVT-fO7omxbcQfvsQ2Gh2u8noy8KX1y9aHBnvRlT9h690iREyiQyNk1anXDisgZwPY7A696xA9J5l6vgCsDFYUZy4XCrGGJPsWHSQW87C7s7fvWbKAZcYwHqvpNz4ueOFwvv4mcjd1vz0Zy4tBBMYXI7W6eKdKoNUuHrKQfcfLNwZdYh0Xk0OkSbZyeIXKwJ0HhYs3xmFuJRh5pDZbj2VLdbD_rzo1d3XWLbZJcNgc6Bk4uHLCrymBMZjKnhLXhl07gv2X-X2cbJvN-NR2Vhw&amp;state=CfDJ8AVJBmry2h1MqXWCYUcfL5ZPF8Ejzmx3KTu0Ap2eAYHn2U3oiw2_e5uOx-OYS_ay97LT3xpJw4H-t2TICpmtNblP3rrWNPUqB8nlwW86myCWW02QwQdWIECZBKLyNt4e6Lv9yB1nzCQKGhsG3bNbVR8QsEWwtqsdkCh_wHNJcLNyAGjN4wQc0qYt5ISXs15C2rX_Ma2cIjo3F9X975mhILc</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="81 /" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://signin-test-oidc-as.azurewebsites.net/session/end?post_logout_redirect_uri=https%3A%2F%2Fsit-coursedirectory.nationalcareersservice.org.uk%2Fsignout%2Fcomplete&amp;id_token_hint=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ikt2VGdlamw4U05aLXpWeXJmckRkV1BZM3pJSHJkWlpYVG5WU1NqWTgta00ifQ.eyJzdWIiOiIzRkY5NEI3RC1GQTk0LTRCMjYtOTFBQy02ODE1NjQwMDdBQjUiLCJlbWFpbCI6ImthZGlyLm1hbGlrQGNvbnRyYWN0c29ubGluZS5vcmciLCJnaXZlbl9uYW1lIjoiS2FkaXIiLCJmYW1pbHlfbmFtZSI6Ik1hbGlrIiwibm9uY2UiOiI2MzY5MzI3MDIwMzczNDQ3MDMuWVdJME9EaGhNMk10WVRnNE15MDBNakJqTFdFd05qSXRNbUprTURReVpqVXpaVEZtT1RJM1ltTTROemN0T1dZd01TMDBaV0U1TFRrNE1UZ3RNak5sWW1ZM1pUTXhORGd3IiwiYXRfaGFzaCI6IklTNVN4c1o3Z1B4blAyb0ZFYXNSdlEiLCJydF9oYXNoIjoic1E3MFNaYWVTY01VZnhmMlhEZEVVdyIsImF1ZCI6IkNvdXJzZURpcmVjdG9yeSIsImV4cCI6MTU1NzY3NzAxMCwiaWF0IjoxNTU3NjczNDEwLCJpc3MiOiJodHRwczovL3NpZ25pbi10ZXN0LW9pZGMtYXMuYXp1cmV3ZWJzaXRlcy5uZXQ6NDQzIn0.LgmgcMdsC4khuHs0xYJihcljLm0CPISRK3JU-JSds_HyP6wPEa7F5ci6JnMUo_G4_jVT-fO7omxbcQfvsQ2Gh2u8noy8KX1y9aHBnvRlT9h690iREyiQyNk1anXDisgZwPY7A696xA9J5l6vgCsDFYUZy4XCrGGJPsWHSQW87C7s7fvWbKAZcYwHqvpNz4ueOFwvv4mcjd1vz0Zy4tBBMYXI7W6eKdKoNUuHrKQfcfLNwZdYh0Xk0OkSbZyeIXKwJ0HhYs3xmFuJRh5pDZbj2VLdbD_rzo1d3XWLbZJcNgc6Bk4uHLCrymBMZjKnhLXhl07gv2X-X2cbJvN-NR2Vhw&amp;state=CfDJ8AVJBmry2h1MqXWCYUcfL5ZPF8Ejzmx3KTu0Ap2eAYHn2U3oiw2_e5uOx-OYS_ay97LT3xpJw4H-t2TICpmtNblP3rrWNPUqB8nlwW86myCWW02QwQdWIECZBKLyNt4e6Lv9yB1nzCQKGhsG3bNbVR8QsEWwtqsdkCh_wHNJcLNyAGjN4wQc0qYt5ISXs15C2rX_Ma2cIjo3F9X975mhILc</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder" enabled="false">
        <stringProp name="ProxyControlGui.port">8888</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="1179605444">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)</stringProp>
          <stringProp name="-88591710">www\.download\.windowsupdate\.com.*</stringProp>
          <stringProp name="1206954446">tiles.*\.mozilla\.com.*</stringProp>
          <stringProp name="-1424663473">.*detectportal\.firefox\.com.*</stringProp>
          <stringProp name="-1899150273">api\.bing\.com.*</stringProp>
          <stringProp name="-192420923">.*yimg\.com.*</stringProp>
          <stringProp name="305776760">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)[\?;].*</stringProp>
          <stringProp name="2118375536">www\.google-analytics\.com.*</stringProp>
          <stringProp name="-1314416226">sqm\.microsoft\.com.*</stringProp>
          <stringProp name="11072252">.*toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="1726898318">geo\.yahoo\.com.*</stringProp>
          <stringProp name="805311387">windowsupdate\.microsoft\.com.*</stringProp>
          <stringProp name="1658855950">.*toolbar\.live\.com.*</stringProp>
          <stringProp name="110431874">.*msg\.yahoo\.com.*</stringProp>
          <stringProp name="1323576868">toolbarqueries\.google\..*</stringProp>
          <stringProp name="1739087931">http?://self-repair\.mozilla\.org.*</stringProp>
          <stringProp name="1779943373">us\.update\.toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="-190610036">.*\.google\.com.*/safebrowsing/.*</stringProp>
          <stringProp name="-958112859">toolbar\.google\.com.*</stringProp>
          <stringProp name="-576820688">toolbar\.msn\.com.*</stringProp>
          <stringProp name="-1435252351">toolbar\.avg\.com/.*</stringProp>
          <stringProp name="1193216536">update\.microsoft\.com.*</stringProp>
          <stringProp name="-1279148329">pgq\.yahoo\.com.*</stringProp>
          <stringProp name="1815174768">safebrowsing.*\.google\.com.*</stringProp>
          <stringProp name="587935979">g\.msn.*</stringProp>
          <stringProp name="1629558731">clients.*\.google.*</stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">4</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">true</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name"></stringProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">1</intProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
      </ProxyControl>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>true</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">recording.xml</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="Course Directory - 100 users for 1hr" enabled="true">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="-897276677">
            <stringProp name="1567">10</stringProp>
            <stringProp name="0">0</stringProp>
            <stringProp name="50547">300</stringProp>
            <stringProp name="1567005">3000</stringProp>
            <stringProp name="50547">300</stringProp>
          </collectionProp>
          <collectionProp name="-1748527699">
            <stringProp name="1660">40</stringProp>
            <stringProp name="0">0</stringProp>
            <stringProp name="53430">600</stringProp>
            <stringProp name="1541058">2400</stringProp>
            <stringProp name="53430">600</stringProp>
          </collectionProp>
          <collectionProp name="1492107490">
            <stringProp name="1691">50</stringProp>
            <stringProp name="0">0</stringProp>
            <stringProp name="53430">600</stringProp>
            <stringProp name="1541058">2400</stringProp>
            <stringProp name="53430">600</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ProviderSearch" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="SearchTerm" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">SearchTerm</stringProp>
                <stringProp name="Argument.value">${provider}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ProviderSearch</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LarsSearch" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="SearchTerm" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">SearchTerm</stringProp>
                <stringProp name="Argument.value">${larssearch}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/LarsSearch</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/Qualifications</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LarsSearchWithFilter" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="SearchTerm" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">SearchTerm</stringProp>
                <stringProp name="Argument.value">${larssearch}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="NotionalNVQLevelv2Filter" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">NotionalNVQLevelv2Filter</stringProp>
                <stringProp name="Argument.value">${level}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/LarsSearch</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/Qualifications</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PostcodeLookup" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Postcode" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">Postcode</stringProp>
                <stringProp name="Argument.value">b13%209da</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/PostcodeLookup</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/Venues/AddVenue</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddVenue" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">Id</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="Address" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">Address</stringProp>
                <stringProp name="Argument.value">Dfc.CourseDirectory.Web.ViewComponents.Shared.AddressModel</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="Address.Id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">Address.Id</stringProp>
                <stringProp name="Argument.value">GB%7CRM%7CA%7C410839</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="Address.AddressLine1" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">Address.AddressLine1</stringProp>
                <stringProp name="Argument.value">${addressline1}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="Address.AddressLine2" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">Address.AddressLine2</stringProp>
                <stringProp name="Argument.value">${addressline2}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="Address.TownOrCity" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">Address.TownOrCity</stringProp>
                <stringProp name="Argument.value">${townorcity}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="Address.County" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">Address.County</stringProp>
                <stringProp name="Argument.value">${county}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="Address.Postcode" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">Address.Postcode</stringProp>
                <stringProp name="Argument.value">${postcode}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="VenueName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">VenueName</stringProp>
                <stringProp name="Argument.value">${venuename}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="AddressLine1" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">AddressLine1</stringProp>
                <stringProp name="Argument.value">${addressline1}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="AddressLine2" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">AddressLine2</stringProp>
                <stringProp name="Argument.value">${addressline2}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="TownOrCity" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">TownOrCity</stringProp>
                <stringProp name="Argument.value">${townorcity}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="County" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">County</stringProp>
                <stringProp name="Argument.value">${county}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="Postcode" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">Postcode</stringProp>
                <stringProp name="Argument.value">${postcode}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="__RequestVerificationToken" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">__RequestVerificationToken</stringProp>
                <stringProp name="Argument.value">CfDJ8AVJBmry2h1MqXWCYUcfL5a2iM57c8ZVpStolhKzicO11l3_Z48SZYw5WwlzLv56i7rrHpTIJFPVSiplDDlX7G-7sk0q3vJ4vIWgL6sHiFGG_DyhVu0jFZu2jNpwo3wyDkRO_vxylomZun_MODKkilLNEgNU0kxVG34YEN1R9kuCVnpHYFRxys5XEIcJrLztxA</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/Venues/AddVenueSelectionConfirmation</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://sit-coursedirectory.nationalcareersservice.org.uk/Venues/VenueAddressSelectionConfirmation</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="filename">C:/Users/kadir/source/repos/dfc-providerportal-automatedtests/PerformanceTests/ProviderPortal_data.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times Over Time" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">500</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="Simple Data Writer" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">C:\Users\kadir\source\repos\dfc-providerportal-automatedtests\PerformanceTests\ProviderPortal.csv</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
